node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.1415927410125732
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1458
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1458
          }
        }
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM1/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SM1/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF3/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM3/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF1/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/SF2/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TM2/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF2/100121.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100117.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100144.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100146.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100145.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100064.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100065.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100003.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100074.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100126.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100022.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100150.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100112.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100127.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100034.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100090.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100118.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100100.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100158.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100156.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100120.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100048.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100083.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100005.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100132.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100016.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100094.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100030.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100104.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100052.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100021.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100149.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100143.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100006.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100076.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100084.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100123.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100014.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100071.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100061.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100075.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100038.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100073.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100154.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100007.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100135.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100082.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100085.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100092.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100017.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100106.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100037.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100049.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100012.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100039.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100032.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100047.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100088.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100091.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100098.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100138.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100036.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100045.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100130.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100110.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100055.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100131.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100051.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100077.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100079.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100066.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100111.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100060.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100134.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100041.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100103.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100161.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100020.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100058.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100095.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100013.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100142.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100136.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100108.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100124.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100078.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100024.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100105.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100027.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100081.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100099.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100139.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100068.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100026.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100044.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100063.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100128.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100023.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100069.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100102.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100153.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100056.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100043.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100148.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100089.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100018.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100019.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100062.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100046.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100070.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100059.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100129.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100155.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100008.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100157.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100159.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100054.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100001.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100133.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100115.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100029.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100010.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100057.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100004.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100160.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100009.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100015.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100097.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100141.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100109.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100028.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100002.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100125.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100087.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100033.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100042.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100035.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100147.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100151.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100114.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100096.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100140.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100031.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100053.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100101.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100086.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100080.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100137.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100025.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100011.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100119.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100067.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100107.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100050.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100113.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100162.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100093.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100122.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100040.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100116.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100072.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100152.bin"
        string_val: "./dataset/vcc2016/bin/Training Set/TF1/100121.bin"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1458
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Greater"
  op: "Greater"
  input: "InputSpectralFrame/input_producer/Size"
  input: "InputSpectralFrame/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Assert/Assert"
  op: "Assert"
  input: "InputSpectralFrame/input_producer/Greater"
  input: "InputSpectralFrame/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Identity"
  op: "Identity"
  input: "InputSpectralFrame/input_producer/Const"
  input: "^InputSpectralFrame/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1458
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "InputSpectralFrame/input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1458
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer"
  op: "FIFOQueueV2"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "InputSpectralFrame/input_producer"
  input: "InputSpectralFrame/input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "InputSpectralFrame/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "InputSpectralFrame/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "InputSpectralFrame/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/Cast"
  op: "Cast"
  input: "InputSpectralFrame/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/mul"
  op: "Mul"
  input: "InputSpectralFrame/input_producer/Cast"
  input: "InputSpectralFrame/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "InputSpectralFrame/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "InputSpectralFrame/input_producer/fraction_of_32_full/tags"
  input: "InputSpectralFrame/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/FixedLengthRecordReaderV2"
  op: "FixedLengthRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "encoding"
    value {
      s: ""
    }
  }
  attr {
    key: "footer_bytes"
    value {
      i: 0
    }
  }
  attr {
    key: "header_bytes"
    value {
      i: 0
    }
  }
  attr {
    key: "hop_bytes"
    value {
      i: 0
    }
  }
  attr {
    key: "record_bytes"
    value {
      i: 4116
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "InputSpectralFrame/ReaderReadV2"
  op: "ReaderReadV2"
  input: "InputSpectralFrame/FixedLengthRecordReaderV2"
  input: "InputSpectralFrame/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/DecodeRaw"
  op: "DecodeRaw"
  input: "InputSpectralFrame/ReaderReadV2:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "InputSpectralFrame/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1029
      }
    }
  }
}
node {
  name: "InputSpectralFrame/Reshape"
  op: "Reshape"
  input: "InputSpectralFrame/DecodeRaw"
  input: "InputSpectralFrame/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1029
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 513
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice"
  op: "StridedSlice"
  input: "InputSpectralFrame/Reshape"
  input: "InputSpectralFrame/strided_slice/stack"
  input: "InputSpectralFrame/strided_slice/stack_1"
  input: "InputSpectralFrame/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "InputSpectralFrame/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 513
          }
        }
        tensor_content: "\313\223\260\300\276\223\260\300\336\226\260\300\252\230\260\300\010\233\260\300N\235\260\300\024\237\260\300\025\244\260\300\346\247\260\300\266\261\260\300\320\314\260\300;\361\260\300S\354\260\300\357\331\260\300S\271\260\300)\275\260\300l\314\260\300\266\332\260\300\322\344\260\300\333\347\260\300\036\003\261\300\212\'\261\300\023B\261\300\325g\261\300q\245\261\300\032\362\261\300\277s\262\300E2\263\300\324\022\264\300F\006\265\300\361\361\265\300\345\t\267\300:\025\270\300{Q\271\300\267\225\272\300\003\n\274\300n\350\275\300\321\330\277\300\030\312\301\300\032\324\303\300&\350\305\300\013\324\307\300w\256\311\300\030\017\313\300\226+\314\300\236>\315\300<\374\315\300\325\357\316\300\270\300\317\300>P\320\300p\344\320\300#\242\321\300{^\322\300\317\023\323\300.\005\324\300\215$\325\300Lk\326\300\177\240\327\300h\264\330\300\000\247\331\300\201\372\332\300i\n\334\300z0\335\3001d\336\300\322\227\337\300M\002\341\300u=\342\300A\246\343\300a\362\344\300-a\346\300\257\200\347\300\213\201\350\300T\220\351\300\'`\352\300\303R\353\300\253B\354\300\035O\355\300\362g\356\300\310Y\357\300qP\360\300\257\024\361\300\245\224\361\300[\366\361\300\004x\362\300\021\345\362\300ki\363\300\236\277\363\300\034O\364\300\312\373\364\300\321\220\365\300BM\366\300.\332\366\300\275\030\367\300Wd\367\300\244\241\367\300Q\272\367\300`\256\367\300\341\332\367\300\201Y\370\300\214\247\370\300\303\375\370\300\346K\371\300\000\260\371\300\366\006\372\300\314y\372\300\337\375\372\300\200#\373\300\265\201\373\300\334\356\373\300\256\211\374\300\315\003\375\300V\221\375\300\027\036\376\300\350\360\376\300F\331\377\300\307%\000\3011k\000\301\257\213\000\301 \326\000\301\020 \001\301Qf\001\301c\217\001\301\217\251\001\301\r\324\001\301\274\367\001\301J\017\002\301\'0\002\301\202&\002\301;,\002\301\356-\002\301$7\002\301\035G\002\301.o\002\301\341\206\002\301G\264\002\301:\272\002\301\333\316\002\3014\322\002\301\375\341\002\301\240\351\002\301\004\357\002\301I\355\002\301\030\355\002\3014\325\002\301I\332\002\301\365\315\002\301\336\270\002\301\225\317\002\301\270\332\002\301:\352\002\301\341\376\002\301Q\021\003\301\3372\003\301\270J\003\301\007U\003\301Fs\003\301\034\312\003\301h\r\004\301{R\004\301\226\206\004\301\320\317\004\301\310\367\004\301$B\005\301k}\005\3018\276\005\301\244\003\006\301\222-\006\301ht\006\301\332\252\006\301]\373\006\301\207:\007\301\t~\007\301\034\260\007\301W\312\007\301\241\334\007\301\341\002\010\301`(\010\301\317G\010\301G{\010\301\335v\010\301\340\206\010\301\362\232\010\301=\267\010\301\336\335\010\301/\001\t\301\004*\t\301\206P\t\301\323o\t\301\021\215\t\301/\275\t\301\302\331\t\301\001\001\n\301\260+\n\301\342F\n\301x_\n\301B\217\n\301B\265\n\301\n\331\n\301\275\001\013\301\230,\013\301\212P\013\301\013`\013\301\320\227\013\301!\277\013\301\006\364\013\301\347\025\014\301\373A\014\301\223y\014\301\202\236\014\301\376\306\014\301\370\355\014\301\177-\r\301\215W\r\301\253\227\r\301U\265\r\301\024\367\r\3019#\016\301\017]\016\301\314\257\016\301\214\362\016\301\2224\017\301\350w\017\301]\271\017\301\263\346\017\301\177\027\020\301\002G\020\301th\020\301\255\213\020\301\013\265\020\301\343\330\020\301\254\376\020\301\215\014\021\301\354\'\021\301\2552\021\301\346Y\021\301\ts\021\301\032\212\021\301^\246\021\301O\272\021\301\321\313\021\301y\341\021\301q\366\021\301@\005\022\301\213\020\022\301\004$\022\301\2246\022\301t>\022\301\356P\022\301\244b\022\301\014o\022\301Fs\022\301`u\022\301\346o\022\301\313i\022\301%p\022\301\005\204\022\301Q\212\022\301d\206\022\301%\206\022\301\341\213\022\301iw\022\301wg\022\301\226>\022\301v\033\022\301f\013\022\301;\362\021\301!\342\021\301\316\326\021\301\366\325\021\301\252\334\021\301|\347\021\301\215\360\021\301\035\r\022\301\313\037\022\301j2\022\301\3439\022\301\246R\022\301\373k\022\301\351\201\022\301 \224\022\301q\254\022\301\"\316\022\301W\370\022\301L\034\023\301e)\023\301AI\023\301\312q\023\301\221\202\023\301J\243\023\301\267\267\023\3015\340\023\301\001\365\023\301\017\021\024\301r\033\024\301\313%\024\301\371:\024\301\330I\024\301\031A\024\301\306P\024\301\246_\024\301\323n\024\301\035\230\024\301m\230\024\3013\317\024\301(\371\024\301\313%\025\301\022T\025\301:\204\025\301l\251\025\301D\271\025\301\324\352\025\301$\016\026\301\2110\026\301|f\026\301_\253\026\301\017\342\026\301\217>\027\301-\215\027\301_\323\027\301\206+\030\301\027\215\030\301S\334\030\301b-\031\301hy\031\301V\324\031\301\002\035\032\301\010F\032\301;u\032\301\n\246\032\301\237\323\032\301I\007\033\301\355@\033\301Kz\033\301\227\221\033\301\'\271\033\301i\322\033\301T\324\033\301\262\304\033\301a\265\033\301\243\254\033\301\022\236\033\301hu\033\3016Z\033\301\016>\033\301\0050\033\301\252(\033\301\307\021\033\301@\377\032\301B\351\032\301\312\324\032\301\375\272\032\301\314\260\032\301\036\267\032\301y\256\032\301O\264\032\301\303\277\032\301\304\316\032\301\253\327\032\301\327\363\032\301\002\033\033\301\2115\033\301\036Q\033\301\250^\033\301@\202\033\301\276\221\033\301\301\260\033\301S\271\033\301\362\312\033\301\237\303\033\301F\320\033\301\352\346\033\301\363\361\033\301\315\007\034\301\351(\034\301sT\034\301\355k\034\301\014\221\034\301\227\252\034\301(\275\034\301\266\334\034\301\356\004\035\301A3\035\301\374g\035\301\334\207\035\301y\251\035\301e\314\035\301\333\365\035\3014\037\036\301eB\036\301\026[\036\301`\204\036\301\344\254\036\301.\312\036\301|\376\036\301\274%\037\301IJ\037\301\253n\037\301\242\207\037\301\361\231\037\301\341\254\037\301c\245\037\301#\220\037\301_\210\037\301\265m\037\301\333U\037\301\226:\037\301p!\037\301\232\364\036\301\367\326\036\301d\265\036\301\370\240\036\301\276\177\036\301\274V\036\301z.\036\301\265\004\036\301\332\354\035\301%\313\035\301A\266\035\301\275\244\035\301\222\237\035\301M\264\035\301M\256\035\301\017\264\035\301\005\267\035\301[\274\035\301\301\267\035\301@\267\035\301\266\260\035\301\013\273\035\301\211\264\035\301\316\263\035\3015\263\035\301\022\261\035\3018\250\035\301W\244\035\301o\240\035\3015\227\035\301\352\225\035\301\340\223\035\301G\203\035\301L\214\035\301\310{\035\301q|\035\301\374m\035\301\006_\035\301\240E\035\301\352%\035\301\354\031\035\301\006\000\035\301\035\356\034\3012\314\034\301\013\302\034\301\205\252\034\301!\223\034\301\"x\034\301_r\034\301\007N\034\301\0024\034\3017/\034\301\000%\034\301\007/\034\301z0\034\301\373/\034\301c/\034\301\2455\034\301\201H\034\301+O\034\301\014O\034\301\177W\034\301\002X\034\301jY\034\301\215]\034\301\nV\034\301\301[\034\301\306U\034\3018]\034\301\266`\034\301\243j\034\301I{\034\301\315\224\034\301Z\247\034\301=\304\034\301V\327\034\3018\345\034\301\257\364\034\301\354\004\035\301\305\"\035\301G:\035\301\005M\035\301\362^\035\301\217p\035\301\223\200\035\301\306\247\035\301\330\310\035\301\275\354\035\301\237\r\036\301`\'\036\3016j\036\301C\246\036\301\264\340\036\301c\033\037\301\035i\037\301;\261\037\301\210\031 \301W\202 \301H\350 \301\266m!\301\356\356!\301a\224\"\301\273x#\301\271t$\301KA%\301\211\212%\301"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/sub"
  op: "Sub"
  input: "InputSpectralFrame/strided_slice"
  input: "InputSpectralFrame/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 513
          }
        }
        tensor_content: "d\010\216@PU\216@6\"\217@.\033\220@Z\016\221@\367\207\221@\r\374\220@@\036\217@\342h\215@\310\207\214@:\257\214@\"\254\215@q\202\217@\014{\221@H\342\222@\314\021\224@}\232\224@\2516\224@p\355\222@\306?\221@S\230\217@K\200\216@_b\216@r\017\217@\203\221\217@\244f\217@\245\000\217@{&\217@2\010\220@\225\315\220@\367\343\220@\276\265\220@\320\335\220@\332\273\221@b\335\222@G\\\224@J\227\226@(L\231@\025\366\233@oA\236@Ba\240@\3218\242@}C\244@\357\234\245@S\213\246@\203B\247@n\237\247@\020\010\250@h>\250@\n\027\250@g\344\247@U\277\247@\337_\247@l\362\246@\215\260\246@\367\327\246@r5\247@\246\313\247@\275\204\250@\0261\251@{\\\252@eZ\253@\\\216\254@\202\333\255@<-\257@Q\250\260@[\000\262@\032u\263@M\270\264@\3758\266@\317~\267@\025\250\270@]\273\271@\013m\272@xL\273@\356\024\274@\364\022\275@\371\004\276@\350\331\276@\030\231\277@\200)\300@\231v\300@\360\233\300@\274\347\300@\312\375\300@\2127\301@\2153\301@\224n\301@`\266\301@t\343\301@\300A\302@\373|\302@Rw\302@\006\212\302@J\241\302@\377\201\302@\364M\302@tT\302@\214\231\302@%\267\302@\363\333\302@\236\007\303@\271$\303@\312N\303@t\177\303@3\310\303@=\252\303@\036\276\303@\211\363\303@\310G\304@wf\304@s\220\304@;\301\304@\205:\305@n\312\305@\013\364\305@\001,\306@_\027\306@\016g\306@\341\275\306@\256.\307@\223L\307@\030]\307@>\217\307@\235\313\307@{\316\307@L\002\310@\333\340\307@\013\375\307@\340\374\307@\314\014\310@\241\034\310@\340p\310@r\245\310@\337\002\311@+\375\310@,.\311@\260\007\311@\222\373\310@B\354\310@<\275\310@\353w\310@\0052\310@\243\265\307@\250]\307@\213\334\306@\006\\\306@*=\306@a\001\306@^\324\305@0\300\305@\334\255\305@@\334\305@\223\363\305@\203\376\305@\2052\306@\376\361\306@\307\242\307@\340;\310@\256\313\310@\360\205\311@\256\003\312@\314\324\312@\232\204\313@\214F\314@\365\372\314@xq\315@\350\023\316@\021\221\316@}4\317@\212\271\317@]@\320@\255\226\320@\355\246\320@\250\266\320@#\337\320@\366\362\320@O\024\321@\016M\321@\\\006\321@\372\001\321@x\033\321@p>\321@\344j\321@c\221\321@e\313\321@v\r\322@;1\322@\030]\322@@\216\322@\242\254\322@\030\357\322@!@\323@\270f\323@\362\207\323@#\327\323@\365\037\324@\037n\324@<\300\324@W\032\325@\274h\325@\311u\325@M\356\325@TH\326@c\250\326@S\365\326@\372F\327@\000\276\327@\345\016\330@Hj\330@\262\303\330@\372O\331@\306\257\331@\016P\332@\010\234\332@[;\333@\232\271\333@\314=\334@\323\374\334@\253\252\335@F@\336@\346\372\336@s\245\337@h4\340@\324\310\340@\021W\341@1\262\341@x+\342@\343\241\342@\315\022\343@\323\207\343@\035\305\343@\257\032\344@K@\344@\344\236\344@$\336\344@\353\016\345@kR\345@a\200\345@[\264\345@G\342\345@\207\023\346@\277/\346@\035E\346@Xc\346@I~\346@\203p\346@S\205\346@\031\221\346@<\236\346@\017\241\346@\010\222\346@\335y\346@\260v\346@\242w\346@`\220\346@\035\235\346@`\230\346@\037\220\346@\207\237\346@8\205\346@Xn\346@\337\033\346@C\327\345@\017\263\345@,\207\345@\007w\345@\275U\345@LL\345@\200K\345@\rA\345@F=\345@\370i\345@Il\345@Hq\345@\267[\345@ls\345@\357|\345@\221}\345@H}\345@\340\202\345@\016\235\345@(\257\345@\272\335\345@\"\314\345@\347\347\345@\265\020\346@4\373\345@\355 \346@\245@\346@\221\220\346@\000\235\346@\200\263\346@\312\260\346@\033\300\346@\301\342\346@\344\350\346@\225\313\346@\271\347\346@d\377\346@?\033\347@\200j\347@!j\347@<\314\347@\230\036\350@\222y\350@\365\312\350@\3411\351@\353}\351@d\254\351@z\032\352@-x\352@\230\303\352@\2039\353@\\\300\353@z7\354@\336\367\354@\231\256\355@\002f\356@t2\357@\002#\360@Q\324\360@Yx\361@y,\362@\355\001\363@\202\254\363@\341#\364@\342\232\364@J\031\365@\017\221\365@u&\366@m\275\366@\266O\367@Q\233\367@\337\r\370@]\\\370@0{\370@oo\370@\315W\370@\372S\370@\260C\370@\016\374\367@\376\320\367@K\230\367@4n\367@\331V\367@l%\367@{\370\366@\225\272\366@\022\207\366@\356H\366@\r%\366@\3227\366@\030\027\366@\364\024\366@M\022\366@\365\"\366@2.\366@\003b\366@D\256\366@\327\344\366@\021\027\367@\243A\367@@\214\367@_\230\367@S\325\367@\372\352\367@@\023\370@\224\006\370@=$\370@\371d\370@B\204\370@\212\306\370@\211\020\371@{u\371@i\260\371@\007\027\372@\204]\372@\350\231\372@m\354\372@*O\373@\262\311\373@RA\374@\355\204\374@\214\320\374@\301+\375@D\227\375@.\010\376@\232i\376@|\246\376@\213\004\377@QW\377@\013\231\377@\311\001\000A\030*\000ApG\000A\276d\000A\310v\000A\313\201\000A\215\203\000A_m\000A\316H\000A\0015\000A=\t\000Ax\264\377@HY\377@\314\367\376@\267\177\376@\307\'\376@\234\276\375@\265o\375@)\013\375@u\223\374@\222+\374@\022\262\373@Og\373@e\017\373@L\323\372@\312\240\372@\225\205\372@\276\245\372@\354\216\372@\034\242\372@\220\242\372@\251\253\372@w\242\372@\324\237\372@\237\221\372@\352\266\372@\336\270\372@\345\304\372@\032\317\372@}\356\372@]\350\372@\367\340\372@$\351\372@\215\340\372@p\356\372@\326\r\373@z\376\372@\211$\373@K\022\373@>#\373@*\025\373@\003\026\373@\251\005\373@\223\323\372@E\317\372@z\265\372@\r\243\372@\266q\372@sg\372@<E\372@\202\036\372@\203\367\371@\320\370\371@\363\273\371@\262\251\371@\303\246\371@\247\215\371@r\246\371@\336\233\371@\347\226\371@n\215\371@\372\233\371@\366\276\371@\256\277\371@=\261\371@0\271\371@\211\255\371@>\226\371@\273\217\371@\301h\371@\344R\371@\210\033\371@\243\367\370@j\320\370@\006\246\370@7\220\370@\003\200\370@om\370@\035j\370@tM\370@J&\370@\340\370\367@u\321\367@v\316\367@\010\245\367@\247|\367@V`\367@\2709\367@\356\007\367@\342*\367@!A\367@\241s\367@\r\243\367@\372\313\367@hU\370@Z\327\370@\255l\371@\214\371\371@\031\304\372@F\220\373@\340\222\374@\337\237\375@\177\234\376@\203\326\377@\274\207\000A\263D\001A\022G\002A$Z\003A\3667\004A\216\211\004A"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/truediv"
  op: "RealDiv"
  input: "InputSpectralFrame/sub"
  input: "InputSpectralFrame/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/clip_by_value/Minimum"
  op: "Minimum"
  input: "InputSpectralFrame/truediv"
  input: "InputSpectralFrame/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/clip_by_value"
  op: "Maximum"
  input: "InputSpectralFrame/clip_by_value/Minimum"
  input: "InputSpectralFrame/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/mul"
  op: "Mul"
  input: "InputSpectralFrame/clip_by_value"
  input: "InputSpectralFrame/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/sub_1"
  op: "Sub"
  input: "InputSpectralFrame/mul"
  input: "InputSpectralFrame/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/Reshape_1"
  op: "Reshape"
  input: "InputSpectralFrame/sub_1"
  input: "InputSpectralFrame/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "InputSpectralFrame/strided_slice_1"
  op: "StridedSlice"
  input: "InputSpectralFrame/Reshape"
  input: "InputSpectralFrame/strided_slice_1/stack"
  input: "InputSpectralFrame/strided_slice_1/stack_1"
  input: "InputSpectralFrame/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "InputSpectralFrame/Cast"
  op: "Cast"
  input: "InputSpectralFrame/strided_slice_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 2048
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "InputSpectralFrame/shuffle_batch/random_shuffle_queue"
  input: "InputSpectralFrame/Reshape_1"
  input: "InputSpectralFrame/Cast"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "InputSpectralFrame/shuffle_batch/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "InputSpectralFrame/shuffle_batch/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "InputSpectralFrame/shuffle_batch/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/sub"
  op: "Sub"
  input: "InputSpectralFrame/shuffle_batch/random_shuffle_queue_Size"
  input: "InputSpectralFrame/shuffle_batch/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/Maximum"
  op: "Maximum"
  input: "InputSpectralFrame/shuffle_batch/Maximum/x"
  input: "InputSpectralFrame/shuffle_batch/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/Cast"
  op: "Cast"
  input: "InputSpectralFrame/shuffle_batch/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0009765625
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/mul"
  op: "Mul"
  input: "InputSpectralFrame/shuffle_batch/Cast"
  input: "InputSpectralFrame/shuffle_batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/fraction_over_1024_of_1024_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "InputSpectralFrame/shuffle_batch/fraction_over_1024_of_1024_full"
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/fraction_over_1024_of_1024_full"
  op: "ScalarSummary"
  input: "InputSpectralFrame/shuffle_batch/fraction_over_1024_of_1024_full/tags"
  input: "InputSpectralFrame/shuffle_batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "InputSpectralFrame/shuffle_batch"
  op: "QueueDequeueManyV2"
  input: "InputSpectralFrame/shuffle_batch/random_shuffle_queue"
  input: "InputSpectralFrame/shuffle_batch/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20851440727710724
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20851440727710724
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "y_embedding/y_emb/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform/sub"
  op: "Sub"
  input: "y_embedding/y_emb/Initializer/random_uniform/max"
  input: "y_embedding/y_emb/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform/mul"
  op: "Mul"
  input: "y_embedding/y_emb/Initializer/random_uniform/RandomUniform"
  input: "y_embedding/y_emb/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Initializer/random_uniform"
  op: "AddV2"
  input: "y_embedding/y_emb/Initializer/random_uniform/mul"
  input: "y_embedding/y_emb/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "y_embedding/y_emb/Assign"
  op: "Assign"
  input: "y_embedding/y_emb"
  input: "y_embedding/y_emb/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "y_embedding/y_emb/read"
  op: "Identity"
  input: "y_embedding/y_emb"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "y_embedding/y_emb/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_regularizer"
  op: "Mul"
  input: "l2_regularizer/scale"
  input: "l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "y_embedding/y_emb/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Regularizer/l2_regularizer"
  op: "Mul"
  input: "y_embedding/y_emb/Regularizer/l2_regularizer/scale"
  input: "y_embedding/y_emb/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22454436123371124
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22454436123371124
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/max"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/mul"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/Conv2d-0/Conv2D"
  op: "Conv2D"
  input: "InputSpectralFrame/shuffle_batch"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/Conv2d-0/Conv2d-0/Conv2D"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/moments/mean"
  op: "Mean"
  input: "loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd"
  input: "loss/Encoder/Conv2d-0/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/moments/StopGradient"
  op: "StopGradient"
  input: "loss/Encoder/Conv2d-0/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd"
  input: "loss/Encoder/Conv2d-0/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/moments/variance"
  op: "Mean"
  input: "loss/Encoder/Conv2d-0/moments/SquaredDifference"
  input: "loss/Encoder/Conv2d-0/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.offset"
  input: "Encoder/Conv2d-0/layernorm.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/layernorm.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.scale"
  input: "Encoder/Conv2d-0/layernorm.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/layernorm.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/add"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-0/moments/variance"
  input: "loss/Encoder/Conv2d-0/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "loss/Encoder/Conv2d-0/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/batchnorm/Rsqrt"
  input: "Encoder/Conv2d-0/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd"
  input: "loss/Encoder/Conv2d-0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/mul_2"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/moments/mean"
  input: "loss/Encoder/Conv2d-0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/sub"
  op: "Sub"
  input: "Encoder/Conv2d-0/layernorm.offset/read"
  input: "loss/Encoder/Conv2d-0/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/batchnorm/add_1"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-0/batchnorm/mul_1"
  input: "loss/Encoder/Conv2d-0/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/mul/x"
  input: "loss/Encoder/Conv2d-0/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-0/lrelu"
  op: "Maximum"
  input: "loss/Encoder/Conv2d-0/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.13363061845302582
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/max"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/mul"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/Conv2d-1/Conv2D"
  op: "Conv2D"
  input: "loss/Encoder/Conv2d-0/lrelu"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/Conv2d-1/Conv2d-1/Conv2D"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/moments/mean"
  op: "Mean"
  input: "loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd"
  input: "loss/Encoder/Conv2d-1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/moments/StopGradient"
  op: "StopGradient"
  input: "loss/Encoder/Conv2d-1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd"
  input: "loss/Encoder/Conv2d-1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/moments/variance"
  op: "Mean"
  input: "loss/Encoder/Conv2d-1/moments/SquaredDifference"
  input: "loss/Encoder/Conv2d-1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.offset"
  input: "Encoder/Conv2d-1/layernorm.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/layernorm.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.scale"
  input: "Encoder/Conv2d-1/layernorm.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/layernorm.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/add"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-1/moments/variance"
  input: "loss/Encoder/Conv2d-1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "loss/Encoder/Conv2d-1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/batchnorm/Rsqrt"
  input: "Encoder/Conv2d-1/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd"
  input: "loss/Encoder/Conv2d-1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/mul_2"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/moments/mean"
  input: "loss/Encoder/Conv2d-1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/sub"
  op: "Sub"
  input: "Encoder/Conv2d-1/layernorm.offset/read"
  input: "loss/Encoder/Conv2d-1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/batchnorm/add_1"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-1/batchnorm/mul_1"
  input: "loss/Encoder/Conv2d-1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/mul/x"
  input: "loss/Encoder/Conv2d-1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-1/lrelu"
  op: "Maximum"
  input: "loss/Encoder/Conv2d-1/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/max"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/mul"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/Conv2d-2/Conv2D"
  op: "Conv2D"
  input: "loss/Encoder/Conv2d-1/lrelu"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/Conv2d-2/Conv2d-2/Conv2D"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/moments/mean"
  op: "Mean"
  input: "loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd"
  input: "loss/Encoder/Conv2d-2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/moments/StopGradient"
  op: "StopGradient"
  input: "loss/Encoder/Conv2d-2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd"
  input: "loss/Encoder/Conv2d-2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/moments/variance"
  op: "Mean"
  input: "loss/Encoder/Conv2d-2/moments/SquaredDifference"
  input: "loss/Encoder/Conv2d-2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.offset"
  input: "Encoder/Conv2d-2/layernorm.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/layernorm.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.scale"
  input: "Encoder/Conv2d-2/layernorm.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/layernorm.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/add"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-2/moments/variance"
  input: "loss/Encoder/Conv2d-2/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "loss/Encoder/Conv2d-2/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/batchnorm/Rsqrt"
  input: "Encoder/Conv2d-2/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd"
  input: "loss/Encoder/Conv2d-2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/mul_2"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/moments/mean"
  input: "loss/Encoder/Conv2d-2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/sub"
  op: "Sub"
  input: "Encoder/Conv2d-2/layernorm.offset/read"
  input: "loss/Encoder/Conv2d-2/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/batchnorm/add_1"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-2/batchnorm/mul_1"
  input: "loss/Encoder/Conv2d-2/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/mul/x"
  input: "loss/Encoder/Conv2d-2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-2/lrelu"
  op: "Maximum"
  input: "loss/Encoder/Conv2d-2/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06681530922651291
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/max"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/mul"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/Conv2d-3/Conv2D"
  op: "Conv2D"
  input: "loss/Encoder/Conv2d-2/lrelu"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/Conv2d-3/Conv2d-3/Conv2D"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/moments/mean"
  op: "Mean"
  input: "loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd"
  input: "loss/Encoder/Conv2d-3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/moments/StopGradient"
  op: "StopGradient"
  input: "loss/Encoder/Conv2d-3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd"
  input: "loss/Encoder/Conv2d-3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/moments/variance"
  op: "Mean"
  input: "loss/Encoder/Conv2d-3/moments/SquaredDifference"
  input: "loss/Encoder/Conv2d-3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.offset"
  input: "Encoder/Conv2d-3/layernorm.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/layernorm.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.scale"
  input: "Encoder/Conv2d-3/layernorm.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/layernorm.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/add"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-3/moments/variance"
  input: "loss/Encoder/Conv2d-3/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "loss/Encoder/Conv2d-3/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/batchnorm/Rsqrt"
  input: "Encoder/Conv2d-3/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd"
  input: "loss/Encoder/Conv2d-3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/mul_2"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/moments/mean"
  input: "loss/Encoder/Conv2d-3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/sub"
  op: "Sub"
  input: "Encoder/Conv2d-3/layernorm.offset/read"
  input: "loss/Encoder/Conv2d-3/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/batchnorm/add_1"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-3/batchnorm/mul_1"
  input: "loss/Encoder/Conv2d-3/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/mul/x"
  input: "loss/Encoder/Conv2d-3/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-3/lrelu"
  op: "Maximum"
  input: "loss/Encoder/Conv2d-3/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.047245558351278305
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047245558351278305
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/max"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/mul"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/Conv2d-4/Conv2D"
  op: "Conv2D"
  input: "loss/Encoder/Conv2d-3/lrelu"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/Conv2d-4/Conv2d-4/Conv2D"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/moments/mean"
  op: "Mean"
  input: "loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd"
  input: "loss/Encoder/Conv2d-4/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/moments/StopGradient"
  op: "StopGradient"
  input: "loss/Encoder/Conv2d-4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd"
  input: "loss/Encoder/Conv2d-4/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/moments/variance"
  op: "Mean"
  input: "loss/Encoder/Conv2d-4/moments/SquaredDifference"
  input: "loss/Encoder/Conv2d-4/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.offset"
  input: "Encoder/Conv2d-4/layernorm.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/layernorm.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.scale"
  input: "Encoder/Conv2d-4/layernorm.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/layernorm.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/add"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-4/moments/variance"
  input: "loss/Encoder/Conv2d-4/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "loss/Encoder/Conv2d-4/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/batchnorm/Rsqrt"
  input: "Encoder/Conv2d-4/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd"
  input: "loss/Encoder/Conv2d-4/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/mul_2"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/moments/mean"
  input: "loss/Encoder/Conv2d-4/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/sub"
  op: "Sub"
  input: "Encoder/Conv2d-4/layernorm.offset/read"
  input: "loss/Encoder/Conv2d-4/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/batchnorm/add_1"
  op: "AddV2"
  input: "loss/Encoder/Conv2d-4/batchnorm/mul_1"
  input: "loss/Encoder/Conv2d-4/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/mul"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/mul/x"
  input: "loss/Encoder/Conv2d-4/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Conv2d-4/lrelu"
  op: "Maximum"
  input: "loss/Encoder/Conv2d-4/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/Flatten/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\003\000\000"
      }
    }
  }
}
node {
  name: "loss/Encoder/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "loss/Encoder/Conv2d-4/lrelu"
  input: "loss/Encoder/Flatten/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08183170855045319
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08183170855045319
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/dense/kernel/Initializer/random_uniform/max"
  input: "Encoder/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/dense/kernel/Initializer/random_uniform/mul"
  input: "Encoder/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense/kernel/Assign"
  op: "Assign"
  input: "Encoder/dense/kernel"
  input: "Encoder/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense/kernel/read"
  op: "Identity"
  input: "Encoder/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense/bias/Assign"
  op: "Assign"
  input: "Encoder/dense/bias"
  input: "Encoder/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense/bias/read"
  op: "Identity"
  input: "Encoder/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/dense/MatMul"
  op: "MatMul"
  input: "loss/Encoder/Flatten/flatten/Reshape"
  input: "Encoder/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Encoder/dense/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/dense/MatMul"
  input: "Encoder/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08183170855045319
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08183170855045319
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/max"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/mul"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Assign"
  op: "Assign"
  input: "Encoder/dense_1/kernel"
  input: "Encoder/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/read"
  op: "Identity"
  input: "Encoder/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Assign"
  op: "Assign"
  input: "Encoder/dense_1/bias"
  input: "Encoder/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense_1/bias/read"
  op: "Identity"
  input: "Encoder/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/Encoder/dense_1/MatMul"
  op: "MatMul"
  input: "loss/Encoder/Flatten/flatten/Reshape"
  input: "Encoder/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Encoder/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "loss/Encoder/dense_1/MatMul"
  input: "Encoder/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/random_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "loss/GaussianSampleLayer/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/random_normal/mul"
  op: "Mul"
  input: "loss/GaussianSampleLayer/random_normal/RandomStandardNormal"
  input: "loss/GaussianSampleLayer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/random_normal"
  op: "AddV2"
  input: "loss/GaussianSampleLayer/random_normal/mul"
  input: "loss/GaussianSampleLayer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/Exp"
  op: "Exp"
  input: "loss/Encoder/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/Sqrt"
  op: "Sqrt"
  input: "loss/GaussianSampleLayer/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/Mul"
  op: "Mul"
  input: "loss/GaussianSampleLayer/random_normal"
  input: "loss/GaussianSampleLayer/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianSampleLayer/Add"
  op: "AddV2"
  input: "loss/Encoder/dense/BiasAdd"
  input: "loss/GaussianSampleLayer/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/embedding_lookup"
  op: "GatherV2"
  input: "y_embedding/y_emb/read"
  input: "InputSpectralFrame/shuffle_batch:1"
  input: "loss/Generator/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/embedding_lookup/Identity"
  op: "Identity"
  input: "loss/Generator/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05999400094151497
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05999400094151497
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/max"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Initializer/random_uniform"
  op: "AddV2"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/mul"
  input: "Generator/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Assign"
  op: "Assign"
  input: "Generator/fully_connected/weights"
  input: "Generator/fully_connected/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected/weights/read"
  op: "Identity"
  input: "Generator/fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Generator/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "loss/Generator/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  input: "loss/Generator/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected/biases/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Assign"
  op: "Assign"
  input: "Generator/fully_connected/biases"
  input: "Generator/fully_connected/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected/biases/read"
  op: "Identity"
  input: "Generator/fully_connected/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected/MatMul"
  op: "MatMul"
  input: "loss/GaussianSampleLayer/Add"
  input: "Generator/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Generator/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/fully_connected/MatMul"
  input: "Generator/fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "loss/Generator/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/Generator/add"
  op: "AddV2"
  input: "loss/Generator/add/x"
  input: "loss/Generator/fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05999400094151497
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05999400094151497
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/max"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/RandomUniform"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Initializer/random_uniform"
  op: "AddV2"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/mul"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Assign"
  op: "Assign"
  input: "Generator/fully_connected_1/weights"
  input: "Generator/fully_connected_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/read"
  op: "Identity"
  input: "Generator/fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999974752427e-07
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "Generator/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "loss/Generator/fully_connected_1/kernel/Regularizer/l2_regularizer/scale"
  input: "loss/Generator/fully_connected_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected_1/biases/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected_1/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Assign"
  op: "Assign"
  input: "Generator/fully_connected_1/biases"
  input: "Generator/fully_connected_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/read"
  op: "Identity"
  input: "Generator/fully_connected_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/fully_connected_1/MatMul"
  op: "MatMul"
  input: "loss/Generator/embedding_lookup/Identity"
  input: "Generator/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Generator/fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/fully_connected_1/MatMul"
  input: "Generator/fully_connected_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "loss/Generator/add_1"
  op: "AddV2"
  input: "loss/Generator/add"
  input: "loss/Generator/fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Initializer/zeros"
  op: "Fill"
  input: "Generator/BiasAdd/biases/Initializer/zeros/shape_as_tensor"
  input: "Generator/BiasAdd/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/BiasAdd/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Assign"
  op: "Assign"
  input: "Generator/BiasAdd/biases"
  input: "Generator/BiasAdd/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/read"
  op: "Identity"
  input: "Generator/BiasAdd/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/BiasAdd/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/add_1"
  input: "Generator/BiasAdd/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "loss/Generator/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377Q\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/Reshape"
  op: "Reshape"
  input: "loss/Generator/BiasAdd/BiasAdd"
  input: "loss/Generator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 81
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\001\000\000\000 \000\000\000Q\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07680954039096832
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07680954039096832
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 81
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose/kernel"
  input: "Generator/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/read"
  op: "Identity"
  input: "Generator/conv2d_transpose/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose/bias"
  input: "Generator/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/read"
  op: "Identity"
  input: "Generator/conv2d_transpose/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000Q\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose/Shape"
  input: "loss/Generator/conv2d_transpose/strided_slice/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice/stack_1"
  input: "loss/Generator/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 57
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/stack"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose/strided_slice"
  input: "loss/Generator/conv2d_transpose/stack/1"
  input: "loss/Generator/conv2d_transpose/stack/2"
  input: "loss/Generator/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Encoder/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Encoder/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/init"
  op: "NoOp"
  input: "^Encoder/Conv2d-0/Conv2d-0/bias/Assign"
  input: "^Encoder/Conv2d-0/Conv2d-0/kernel/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/bias/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/kernel/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/bias/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/kernel/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/bias/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/kernel/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/bias/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/kernel/Assign"
  input: "^Encoder/dense/bias/Assign"
  input: "^Encoder/dense/kernel/Assign"
  input: "^Encoder/dense_1/bias/Assign"
  input: "^Encoder/dense_1/kernel/Assign"
  input: "^Generator/conv2d_transpose/bias/Assign"
  input: "^Generator/conv2d_transpose/kernel/Assign"
}
node {
  name: "loss/Generator/conv2d_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/transpose"
  op: "Transpose"
  input: "loss/Generator/Reshape"
  input: "loss/Generator/conv2d_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_1/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_1/stack_1"
  input: "loss/Generator/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_2"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_2/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_2/stack_1"
  input: "loss/Generator/conv2d_transpose/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_3"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_3/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_3/stack_1"
  input: "loss/Generator/conv2d_transpose/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/strided_slice_4"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_4/stack"
  input: "loss/Generator/conv2d_transpose/strided_slice_4/stack_1"
  input: "loss/Generator/conv2d_transpose/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/stack_1"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose/strided_slice_1"
  input: "loss/Generator/conv2d_transpose/strided_slice_2"
  input: "loss/Generator/conv2d_transpose/strided_slice_3"
  input: "loss/Generator/conv2d_transpose/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "loss/Generator/conv2d_transpose/stack_1"
  input: "Generator/conv2d_transpose/kernel/read"
  input: "loss/Generator/conv2d_transpose/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/transpose_1"
  op: "Transpose"
  input: "loss/Generator/conv2d_transpose/conv2d_transpose"
  input: "loss/Generator/conv2d_transpose/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/conv2d_transpose/transpose_1"
  input: "Generator/conv2d_transpose/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Generator/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/moments/mean"
  op: "Mean"
  input: "loss/Generator/conv2d_transpose/BiasAdd"
  input: "loss/Generator/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/moments/StopGradient"
  op: "StopGradient"
  input: "loss/Generator/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Generator/conv2d_transpose/BiasAdd"
  input: "loss/Generator/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/moments/variance"
  op: "Mean"
  input: "loss/Generator/moments/SquaredDifference"
  input: "loss/Generator/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN0.offset"
  input: "Generator/ConvT-LN0.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/read"
  op: "Identity"
  input: "Generator/ConvT-LN0.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN0.scale"
  input: "Generator/ConvT-LN0.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/read"
  op: "Identity"
  input: "Generator/ConvT-LN0.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/add"
  op: "AddV2"
  input: "loss/Generator/moments/variance"
  input: "loss/Generator/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "loss/Generator/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/mul"
  op: "Mul"
  input: "loss/Generator/batchnorm/Rsqrt"
  input: "Generator/ConvT-LN0.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/mul_1"
  op: "Mul"
  input: "loss/Generator/conv2d_transpose/BiasAdd"
  input: "loss/Generator/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/mul_2"
  op: "Mul"
  input: "loss/Generator/moments/mean"
  input: "loss/Generator/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/sub"
  op: "Sub"
  input: "Generator/ConvT-LN0.offset/read"
  input: "loss/Generator/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm/add_1"
  op: "AddV2"
  input: "loss/Generator/batchnorm/mul_1"
  input: "loss/Generator/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Generator/mul"
  op: "Mul"
  input: "loss/Generator/mul/x"
  input: "loss/Generator/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/lrelu"
  op: "Maximum"
  input: "loss/Generator/batchnorm/add_1"
  input: "loss/Generator/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.13363061845302582
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13363061845302582
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/max"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/mul"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/kernel"
  input: "Generator/conv2d_transpose_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/bias"
  input: "Generator/conv2d_transpose_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_1/Shape"
  input: "loss/Generator/conv2d_transpose_1/strided_slice/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice/stack_1"
  input: "loss/Generator/conv2d_transpose_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 171
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/stack"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice"
  input: "loss/Generator/conv2d_transpose_1/stack/1"
  input: "loss/Generator/conv2d_transpose_1/stack/2"
  input: "loss/Generator/conv2d_transpose_1/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/transpose"
  op: "Transpose"
  input: "loss/Generator/lrelu"
  input: "loss/Generator/conv2d_transpose_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_1"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_1/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_1/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_1/stack_1"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_2"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_1/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_2/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_2/stack_1"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_3"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_1/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_3/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_3/stack_1"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/strided_slice_4"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_1/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_4/stack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_4/stack_1"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/stack_1"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_1"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_2"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_3"
  input: "loss/Generator/conv2d_transpose_1/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "loss/Generator/conv2d_transpose_1/stack_1"
  input: "Generator/conv2d_transpose_1/kernel/read"
  input: "loss/Generator/conv2d_transpose_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/transpose_1"
  op: "Transpose"
  input: "loss/Generator/conv2d_transpose_1/conv2d_transpose"
  input: "loss/Generator/conv2d_transpose_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_1/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/conv2d_transpose_1/transpose_1"
  input: "Generator/conv2d_transpose_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Generator/moments_1/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/moments_1/mean"
  op: "Mean"
  input: "loss/Generator/conv2d_transpose_1/BiasAdd"
  input: "loss/Generator/moments_1/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/moments_1/StopGradient"
  op: "StopGradient"
  input: "loss/Generator/moments_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/moments_1/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Generator/conv2d_transpose_1/BiasAdd"
  input: "loss/Generator/moments_1/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/moments_1/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/moments_1/variance"
  op: "Mean"
  input: "loss/Generator/moments_1/SquaredDifference"
  input: "loss/Generator/moments_1/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN1.offset"
  input: "Generator/ConvT-LN1.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/read"
  op: "Identity"
  input: "Generator/ConvT-LN1.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN1.scale"
  input: "Generator/ConvT-LN1.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/read"
  op: "Identity"
  input: "Generator/ConvT-LN1.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/add"
  op: "AddV2"
  input: "loss/Generator/moments_1/variance"
  input: "loss/Generator/batchnorm_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/Rsqrt"
  op: "Rsqrt"
  input: "loss/Generator/batchnorm_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/mul"
  op: "Mul"
  input: "loss/Generator/batchnorm_1/Rsqrt"
  input: "Generator/ConvT-LN1.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/mul_1"
  op: "Mul"
  input: "loss/Generator/conv2d_transpose_1/BiasAdd"
  input: "loss/Generator/batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/mul_2"
  op: "Mul"
  input: "loss/Generator/moments_1/mean"
  input: "loss/Generator/batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/sub"
  op: "Sub"
  input: "Generator/ConvT-LN1.offset/read"
  input: "loss/Generator/batchnorm_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_1/add_1"
  op: "AddV2"
  input: "loss/Generator/batchnorm_1/mul_1"
  input: "loss/Generator/batchnorm_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Generator/mul_1"
  op: "Mul"
  input: "loss/Generator/mul_1/x"
  input: "loss/Generator/batchnorm_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/lrelu_1"
  op: "Maximum"
  input: "loss/Generator/batchnorm_1/add_1"
  input: "loss/Generator/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/max"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/mul"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/kernel"
  input: "Generator/conv2d_transpose_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/bias"
  input: "Generator/conv2d_transpose_2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_2/Shape"
  input: "loss/Generator/conv2d_transpose_2/strided_slice/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice/stack_1"
  input: "loss/Generator/conv2d_transpose_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 513
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/stack"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice"
  input: "loss/Generator/conv2d_transpose_2/stack/1"
  input: "loss/Generator/conv2d_transpose_2/stack/2"
  input: "loss/Generator/conv2d_transpose_2/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/transpose"
  op: "Transpose"
  input: "loss/Generator/lrelu_1"
  input: "loss/Generator/conv2d_transpose_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_1"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_2/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_1/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_1/stack_1"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_2"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_2/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_2/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_2/stack_1"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_3"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_2/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_3/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_3/stack_1"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/strided_slice_4"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_2/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_4/stack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_4/stack_1"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/stack_1"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_1"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_2"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_3"
  input: "loss/Generator/conv2d_transpose_2/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "loss/Generator/conv2d_transpose_2/stack_1"
  input: "Generator/conv2d_transpose_2/kernel/read"
  input: "loss/Generator/conv2d_transpose_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/transpose_1"
  op: "Transpose"
  input: "loss/Generator/conv2d_transpose_2/conv2d_transpose"
  input: "loss/Generator/conv2d_transpose_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_2/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/conv2d_transpose_2/transpose_1"
  input: "Generator/conv2d_transpose_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Generator/moments_2/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/moments_2/mean"
  op: "Mean"
  input: "loss/Generator/conv2d_transpose_2/BiasAdd"
  input: "loss/Generator/moments_2/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/moments_2/StopGradient"
  op: "StopGradient"
  input: "loss/Generator/moments_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/moments_2/SquaredDifference"
  op: "SquaredDifference"
  input: "loss/Generator/conv2d_transpose_2/BiasAdd"
  input: "loss/Generator/moments_2/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/moments_2/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/moments_2/variance"
  op: "Mean"
  input: "loss/Generator/moments_2/SquaredDifference"
  input: "loss/Generator/moments_2/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN2.offset"
  input: "Generator/ConvT-LN2.offset/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/read"
  op: "Identity"
  input: "Generator/ConvT-LN2.offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN2.scale"
  input: "Generator/ConvT-LN2.scale/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/read"
  op: "Identity"
  input: "Generator/ConvT-LN2.scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/add"
  op: "AddV2"
  input: "loss/Generator/moments_2/variance"
  input: "loss/Generator/batchnorm_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/Rsqrt"
  op: "Rsqrt"
  input: "loss/Generator/batchnorm_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/mul"
  op: "Mul"
  input: "loss/Generator/batchnorm_2/Rsqrt"
  input: "Generator/ConvT-LN2.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/mul_1"
  op: "Mul"
  input: "loss/Generator/conv2d_transpose_2/BiasAdd"
  input: "loss/Generator/batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/mul_2"
  op: "Mul"
  input: "loss/Generator/moments_2/mean"
  input: "loss/Generator/batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/sub"
  op: "Sub"
  input: "Generator/ConvT-LN2.offset/read"
  input: "loss/Generator/batchnorm_2/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/batchnorm_2/add_1"
  op: "AddV2"
  input: "loss/Generator/batchnorm_2/mul_1"
  input: "loss/Generator/batchnorm_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "loss/Generator/mul_2"
  op: "Mul"
  input: "loss/Generator/mul_2/x"
  input: "loss/Generator/batchnorm_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/lrelu_2"
  op: "Maximum"
  input: "loss/Generator/batchnorm_2/add_1"
  input: "loss/Generator/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\004\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025503069162368774
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025503069162368774
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/max"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/mul"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1025
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/kernel"
  input: "Generator/conv2d_transpose_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/bias"
  input: "Generator/conv2d_transpose_3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_3/Shape"
  input: "loss/Generator/conv2d_transpose_3/strided_slice/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice/stack_1"
  input: "loss/Generator/conv2d_transpose_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 513
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/stack"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice"
  input: "loss/Generator/conv2d_transpose_3/stack/1"
  input: "loss/Generator/conv2d_transpose_3/stack/2"
  input: "loss/Generator/conv2d_transpose_3/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/transpose"
  op: "Transpose"
  input: "loss/Generator/lrelu_2"
  input: "loss/Generator/conv2d_transpose_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_1"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_3/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_1/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_1/stack_1"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_2"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_3/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_2/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_2/stack_1"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_3"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_3/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_3/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_3/stack_1"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/strided_slice_4"
  op: "StridedSlice"
  input: "loss/Generator/conv2d_transpose_3/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_4/stack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_4/stack_1"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/stack_1"
  op: "Pack"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_1"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_2"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_3"
  input: "loss/Generator/conv2d_transpose_3/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "loss/Generator/conv2d_transpose_3/stack_1"
  input: "Generator/conv2d_transpose_3/kernel/read"
  input: "loss/Generator/conv2d_transpose_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/transpose_1"
  op: "Transpose"
  input: "loss/Generator/conv2d_transpose_3/conv2d_transpose"
  input: "loss/Generator/conv2d_transpose_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/Generator/conv2d_transpose_3/BiasAdd"
  op: "BiasAdd"
  input: "loss/Generator/conv2d_transpose_3/transpose_1"
  input: "Generator/conv2d_transpose_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "loss/Flatten/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten/flatten/Reshape"
  op: "Reshape"
  input: "loss/Encoder/dense/BiasAdd"
  input: "loss/Flatten/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/Flatten_1/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten_1/flatten/Reshape"
  op: "Reshape"
  input: "loss/Encoder/dense_1/BiasAdd"
  input: "loss/Flatten_1/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/zeros_like"
  op: "Fill"
  input: "loss/zeros_like/shape_as_tensor"
  input: "loss/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Flatten_2/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten_2/flatten/Reshape"
  op: "Reshape"
  input: "loss/zeros_like"
  input: "loss/Flatten_2/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/zeros_like_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/zeros_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/zeros_like_1"
  op: "Fill"
  input: "loss/zeros_like_1/shape_as_tensor"
  input: "loss/zeros_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Flatten_3/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten_3/flatten/Reshape"
  op: "Reshape"
  input: "loss/zeros_like_1"
  input: "loss/Flatten_3/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/Exp"
  op: "Exp"
  input: "loss/Flatten_1/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/Exp_1"
  op: "Exp"
  input: "loss/Flatten_3/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/sub"
  op: "Sub"
  input: "loss/Flatten/flatten/Reshape"
  input: "loss/Flatten_2/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/Square"
  op: "Square"
  input: "loss/GaussianKLD/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/sub_1"
  op: "Sub"
  input: "loss/Flatten_3/flatten/Reshape"
  input: "loss/Flatten_1/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/add"
  op: "AddV2"
  input: "loss/GaussianKLD/Exp"
  input: "loss/GaussianKLD/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/add_1"
  op: "AddV2"
  input: "loss/GaussianKLD/Exp_1"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/div"
  op: "RealDiv"
  input: "loss/GaussianKLD/add"
  input: "loss/GaussianKLD/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/add_2"
  op: "AddV2"
  input: "loss/GaussianKLD/sub_1"
  input: "loss/GaussianKLD/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/sub_2"
  op: "Sub"
  input: "loss/GaussianKLD/add_2"
  input: "loss/GaussianKLD/sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/mul"
  op: "Mul"
  input: "loss/GaussianKLD/mul/x"
  input: "loss/GaussianKLD/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/GaussianKLD/Sum"
  op: "Sum"
  input: "loss/GaussianKLD/mul"
  input: "loss/GaussianKLD/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/GaussianKLD/Sum"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Flatten_4/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\002\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten_4/flatten/Reshape"
  op: "Reshape"
  input: "InputSpectralFrame/shuffle_batch"
  input: "loss/Flatten_4/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/Flatten_5/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\002\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten_5/flatten/Reshape"
  op: "Reshape"
  input: "loss/Generator/conv2d_transpose_3/BiasAdd"
  input: "loss/Flatten_5/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/Flatten_6/flatten/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\002\000\000"
      }
    }
  }
}
node {
  name: "loss/Flatten_6/flatten/Reshape"
  op: "Reshape"
  input: "loss/Generator/conv2d_transpose_3/BiasAdd"
  input: "loss/Flatten_6/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/zeros_like_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\002\000\000"
      }
    }
  }
}
node {
  name: "loss/zeros_like_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/zeros_like_2"
  op: "Fill"
  input: "loss/zeros_like_2/shape_as_tensor"
  input: "loss/zeros_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/GaussianLogDensity/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/mul"
  op: "Mul"
  input: "loss/GaussianLogDensity/mul/x"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/Log"
  op: "Log"
  input: "loss/GaussianLogDensity/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/Exp"
  op: "Exp"
  input: "loss/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/sub"
  op: "Sub"
  input: "loss/Flatten_4/flatten/Reshape"
  input: "loss/Flatten_5/flatten/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/Square"
  op: "Square"
  input: "loss/GaussianLogDensity/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/add"
  op: "AddV2"
  input: "loss/GaussianLogDensity/Exp"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/div"
  op: "RealDiv"
  input: "loss/GaussianLogDensity/Square"
  input: "loss/GaussianLogDensity/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/add_1"
  op: "AddV2"
  input: "loss/GaussianLogDensity/Log"
  input: "loss/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/add_2"
  op: "AddV2"
  input: "loss/GaussianLogDensity/add_1"
  input: "loss/GaussianLogDensity/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/mul_1"
  op: "Mul"
  input: "loss/GaussianLogDensity/mul_1/x"
  input: "loss/GaussianLogDensity/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/GaussianLogDensity/Sum"
  op: "Sum"
  input: "loss/GaussianLogDensity/mul_1"
  input: "loss/GaussianLogDensity/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean_1"
  op: "Mean"
  input: "loss/GaussianLogDensity/Sum"
  input: "loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "Neg"
  input: "loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "KL-div/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "KL-div"
      }
    }
  }
}
node {
  name: "KL-div"
  op: "ScalarSummary"
  input: "KL-div/tags"
  input: "loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logPx/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logPx"
      }
    }
  }
}
node {
  name: "logPx"
  op: "ScalarSummary"
  input: "logPx/tags"
  input: "loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "xh/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "xh"
      }
    }
  }
}
node {
  name: "xh"
  op: "HistogramSummary"
  input: "xh/tag"
  input: "loss/Generator/conv2d_transpose_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x"
      }
    }
  }
}
node {
  name: "x"
  op: "HistogramSummary"
  input: "x/tag"
  input: "InputSpectralFrame/shuffle_batch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Update/gradients/grad_ys_0"
  op: "Fill"
  input: "Update/gradients/Shape"
  input: "Update/gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/grad_ys_0"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/grad_ys_0"
  input: "^Update/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/grad_ys_0"
  input: "^Update/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/Neg_grad/Neg"
  op: "Neg"
  input: "Update/gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/add_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Mean_grad/Reshape"
  input: "Update/gradients/loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Mean_grad/Tile"
  input: "Update/gradients/loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/Neg_grad/Neg"
  input: "Update/gradients/loss/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_1_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Mean_1_grad/Reshape"
  input: "Update/gradients/loss/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Mean_1_grad/Tile"
  input: "Update/gradients/loss/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Maximum/x"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/floordiv/x"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Mean_grad/truediv"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Sum_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Reshape"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Maximum/x"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\002\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/floordiv/x"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Mean_1_grad/truediv"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\002\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Reshape"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Tile"
  input: "loss/GaussianKLD/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/Mul"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/Sum"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/GaussianKLD/mul/x"
  input: "Update/gradients/loss/GaussianKLD/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianKLD/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/Reshape"
  input: "^Update/gradients/loss/GaussianKLD/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianKLD/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\002\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Tile"
  input: "loss/GaussianLogDensity/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Sum"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/GaussianLogDensity/mul_1/x"
  input: "Update/gradients/loss/GaussianLogDensity/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/Neg"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/Sum"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/mul_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/mul_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape"
  input: "^Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/sub_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/mul_1_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/control_dependency"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianKLD/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/sub_2_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianKLD/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\002\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\001\002\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Shape"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/RealDiv"
  op: "RealDiv"
  input: "Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/control_dependency_1"
  input: "loss/GaussianLogDensity/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/RealDiv"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Sum"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Neg"
  op: "Neg"
  input: "loss/GaussianLogDensity/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Neg"
  input: "loss/GaussianLogDensity/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/RealDiv_1"
  input: "loss/GaussianLogDensity/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianLogDensity/add_2_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/mul"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Sum_1"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianLogDensity/div_grad/Reshape"
  input: "^Update/gradients/loss/GaussianLogDensity/div_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Reshape"
  input: "^Update/gradients/loss/GaussianLogDensity/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/Reshape_1"
  input: "^Update/gradients/loss/GaussianLogDensity/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_1_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianKLD/sub_1_grad/Neg"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianKLD/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/sub_1_grad/Neg"
  input: "^Update/gradients/loss/GaussianKLD/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/sub_1_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Shape"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/RealDiv"
  op: "RealDiv"
  input: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency_1"
  input: "loss/GaussianKLD/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/GaussianKLD/div_grad/RealDiv"
  input: "Update/gradients/loss/GaussianKLD/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Sum"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Neg"
  op: "Neg"
  input: "loss/GaussianKLD/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Neg"
  input: "loss/GaussianKLD/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Update/gradients/loss/GaussianKLD/div_grad/RealDiv_1"
  input: "loss/GaussianKLD/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianKLD/add_2_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/GaussianKLD/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/GaussianKLD/div_grad/mul"
  input: "Update/gradients/loss/GaussianKLD/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Sum_1"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/div_grad/Reshape"
  input: "^Update/gradients/loss/GaussianKLD/div_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Reshape"
  input: "^Update/gradients/loss/GaussianKLD/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/div_grad/Reshape_1"
  input: "^Update/gradients/loss/GaussianKLD/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Square_grad/Const"
  op: "Const"
  input: "^Update/gradients/loss/GaussianLogDensity/div_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Square_grad/Mul"
  op: "Mul"
  input: "loss/GaussianLogDensity/sub"
  input: "Update/gradients/loss/GaussianLogDensity/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/Square_grad/Mul_1"
  op: "Mul"
  input: "Update/gradients/loss/GaussianLogDensity/div_grad/tuple/control_dependency"
  input: "Update/gradients/loss/GaussianLogDensity/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/div_grad/tuple/control_dependency"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/div_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianKLD/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/div_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianKLD/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/GaussianLogDensity/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianLogDensity/Square_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianLogDensity/sub_grad/Neg"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/Square_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianLogDensity/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/Square_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianLogDensity/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianLogDensity/sub_grad/Neg"
  input: "^Update/gradients/loss/GaussianLogDensity/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianLogDensity/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Exp_grad/mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianKLD/add_grad/tuple/control_dependency"
  input: "loss/GaussianKLD/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Square_grad/Const"
  op: "Const"
  input: "^Update/gradients/loss/GaussianKLD/add_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Square_grad/Mul"
  op: "Mul"
  input: "loss/GaussianKLD/sub"
  input: "Update/gradients/loss/GaussianKLD/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/Square_grad/Mul_1"
  op: "Mul"
  input: "Update/gradients/loss/GaussianKLD/add_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/GaussianKLD/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianLogDensity/sub_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN"
  op: "AddN"
  input: "Update/gradients/loss/GaussianKLD/sub_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/GaussianKLD/Exp_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/sub_1_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Flatten_1/flatten/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Flatten_1/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/AddN"
  input: "Update/gradients/loss/Flatten_1/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/GaussianKLD/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianKLD/Square_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianKLD/sub_grad/Neg"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/Square_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianKLD/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/Square_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianKLD/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianKLD/sub_grad/Neg"
  input: "^Update/gradients/loss/GaussianKLD/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianKLD/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Reshape"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Reshape"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Flatten_5/flatten/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Flatten/flatten/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Flatten/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/GaussianKLD/sub_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Flatten/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_1_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\004\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_1_grad/transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Shape"
  input: "loss/Generator/conv2d_transpose_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_1_grad/transpose"
  input: "Generator/conv2d_transpose_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2DBackpropFilter"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Generator/batchnorm_2/add_1"
  input: "loss/Generator/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Shape"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/GreaterEqual"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_grad/transpose"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Sum"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/GreaterEqual"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/zeros_like"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/SelectV2_1"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Sum_1"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/lrelu_2_grad/Reshape"
  input: "^Update/gradients/loss/Generator/lrelu_2_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Reshape"
  input: "^Update/gradients/loss/Generator/lrelu_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/Reshape_1"
  input: "^Update/gradients/loss/Generator/lrelu_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/mul_2_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Generator/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/tuple/control_dependency_1"
  input: "loss/Generator/batchnorm_2/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/mul_2_grad/Mul"
  input: "Update/gradients/loss/Generator/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/mul_2_grad/Sum"
  input: "Update/gradients/loss/Generator/mul_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/mul_2/x"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Generator/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_1"
  op: "AddN"
  input: "Update/gradients/loss/Generator/lrelu_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_1"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_1"
  input: "^Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_1"
  input: "^Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/control_dependency"
  input: "loss/Generator/batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/conv2d_transpose_2/BiasAdd"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_2/sub_grad/Neg"
  input: "^Update/gradients/loss/Generator/batchnorm_2/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/Neg"
  input: "^Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/control_dependency_1"
  input: "loss/Generator/batchnorm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Mul"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/moments_2/mean"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_2"
  op: "AddN"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_2"
  input: "Generator/ConvT-LN2.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Mul"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/batchnorm_2/Rsqrt"
  input: "Update/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Mul_1"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Sum_1"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Generator/batchnorm_2/Rsqrt"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Generator/batchnorm_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Maximum/x"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/floordiv/x"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Reshape"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4104.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Tile"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Generator/moments_2/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Generator/moments_2/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Generator/conv2d_transpose_2/BiasAdd"
  input: "loss/Generator/moments_2/StopGradient"
  input: "^Update/gradients/loss/Generator/moments_2/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_2/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\001\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Generator/moments_2/mean_grad/Reshape"
  input: "Update/gradients/loss/Generator/moments_2/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4104.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_2/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Generator/moments_2/mean_grad/Tile"
  input: "Update/gradients/loss/Generator/moments_2/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_3"
  op: "AddN"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_2/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_2/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_3"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_3"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_2/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_1_grad/transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Shape"
  input: "loss/Generator/conv2d_transpose_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_1_grad/transpose"
  input: "Generator/conv2d_transpose_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2DBackpropFilter"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Generator/batchnorm_1/add_1"
  input: "loss/Generator/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Shape"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/GreaterEqual"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_grad/transpose"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Sum"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/GreaterEqual"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/zeros_like"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/SelectV2_1"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Sum_1"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/lrelu_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/lrelu_1_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/lrelu_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/Reshape_1"
  input: "^Update/gradients/loss/Generator/lrelu_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/mul_1_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Generator/mul_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/tuple/control_dependency_1"
  input: "loss/Generator/batchnorm_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/mul_1_grad/Mul"
  input: "Update/gradients/loss/Generator/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/mul_1_grad/Sum"
  input: "Update/gradients/loss/Generator/mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/mul_1/x"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/mul_1_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/mul_1_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_4"
  op: "AddN"
  input: "Update/gradients/loss/Generator/lrelu_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_4"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_4"
  input: "^Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_4"
  input: "^Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/control_dependency"
  input: "loss/Generator/batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/conv2d_transpose_1/BiasAdd"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_1/sub_grad/Neg"
  input: "^Update/gradients/loss/Generator/batchnorm_1/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/Neg"
  input: "^Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/control_dependency_1"
  input: "loss/Generator/batchnorm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Mul"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/moments_1/mean"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_5"
  op: "AddN"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_5"
  input: "Generator/ConvT-LN1.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Mul"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/batchnorm_1/Rsqrt"
  input: "Update/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Mul_1"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Sum_1"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Generator/batchnorm_1/Rsqrt"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Generator/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Maximum/x"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/floordiv/x"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Reshape"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2736.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Tile"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Generator/moments_1/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Generator/moments_1/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Generator/conv2d_transpose_1/BiasAdd"
  input: "loss/Generator/moments_1/StopGradient"
  input: "^Update/gradients/loss/Generator/moments_1/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_1/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Generator/moments_1/mean_grad/Reshape"
  input: "Update/gradients/loss/Generator/moments_1/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2736.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments_1/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Generator/moments_1/mean_grad/Tile"
  input: "Update/gradients/loss/Generator/moments_1/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_6"
  op: "AddN"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_1/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments_1/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_6"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_6"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm_1/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_1_grad/transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Shape"
  input: "loss/Generator/conv2d_transpose_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_1_grad/transpose"
  input: "Generator/conv2d_transpose_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Generator/lrelu_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Generator/lrelu_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Generator/batchnorm/add_1"
  input: "loss/Generator/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/lrelu_grad/Shape"
  input: "Update/gradients/loss/Generator/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_grad/transpose"
  input: "Update/gradients/loss/Generator/lrelu_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/lrelu_grad/SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/lrelu_grad/Sum"
  input: "Update/gradients/loss/Generator/lrelu_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Generator/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Generator/lrelu_grad/zeros_like"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Generator/lrelu_grad/SelectV2_1"
  input: "Update/gradients/loss/Generator/lrelu_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/lrelu_grad/Sum_1"
  input: "Update/gradients/loss/Generator/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Generator/lrelu_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Generator/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/lrelu_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/lrelu_grad/Reshape_1"
  input: "^Update/gradients/loss/Generator/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/mul_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Generator/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/lrelu_grad/tuple/control_dependency_1"
  input: "loss/Generator/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/mul_grad/Mul"
  input: "Update/gradients/loss/Generator/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/mul_grad/Sum"
  input: "Update/gradients/loss/Generator/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/mul/x"
  input: "Update/gradients/loss/Generator/lrelu_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_7"
  op: "AddN"
  input: "Update/gradients/loss/Generator/lrelu_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_7"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_7"
  input: "^Update/gradients/loss/Generator/batchnorm/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_7"
  input: "^Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/control_dependency"
  input: "loss/Generator/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/conv2d_transpose/BiasAdd"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Generator/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Generator/batchnorm/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "loss/Generator/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Mul"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/moments/mean"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_8"
  op: "AddN"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_8"
  input: "Generator/ConvT-LN0.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Mul"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Generator/batchnorm/Rsqrt"
  input: "Update/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Mul_1"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Sum_1"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Generator/batchnorm/Rsqrt"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Generator/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/add_grad/Sum"
  input: "Update/gradients/loss/Generator/batchnorm/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Generator/batchnorm/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Generator/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/batchnorm/add_grad/Reshape"
  input: "^Update/gradients/loss/Generator/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Maximum/x"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/Generator/moments/variance_grad/floordiv/x"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Reshape"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1824.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Tile"
  input: "Update/gradients/loss/Generator/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Generator/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Generator/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Generator/conv2d_transpose/BiasAdd"
  input: "loss/Generator/moments/StopGradient"
  input: "^Update/gradients/loss/Generator/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Generator/moments/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Generator/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/moments/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Generator/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Generator/moments/mean_grad/Reshape"
  input: "Update/gradients/loss/Generator/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1824.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Generator/moments/mean_grad/Tile"
  input: "Update/gradients/loss/Generator/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_9"
  op: "AddN"
  input: "Update/gradients/loss/Generator/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_9"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_9"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/transpose_1_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/conv2d_transpose/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\001\000\000\000 \000\000\000Q\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Update/gradients/loss/Generator/conv2d_transpose/transpose_1_grad/transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "loss/Generator/conv2d_transpose/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Update/gradients/loss/Generator/conv2d_transpose/transpose_1_grad/transpose"
  input: "Generator/conv2d_transpose/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "loss/Generator/conv2d_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/conv2d_transpose/transpose_grad/transpose"
  op: "Transpose"
  input: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Generator/conv2d_transpose/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 81
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/conv2d_transpose/transpose_grad/transpose"
  input: "Update/gradients/loss/Generator/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/loss/Generator/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/Reshape_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/Reshape_grad/Reshape"
  input: "^Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/Generator/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/Generator/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Generator/add_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Generator/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/add_grad/Sum"
  input: "Update/gradients/loss/Generator/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/Generator/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/add_grad/Reshape"
  input: "^Update/gradients/loss/Generator/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/Generator/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/add_1_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/loss/Generator/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/add_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/add_grad/tuple/control_dependency_1"
  input: "^Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  input: "Generator/fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "loss/Generator/embedding_lookup/Identity"
  input: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul_1"
  input: "^Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "Generator/fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "loss/GaussianSampleLayer/Add"
  input: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul_1"
  input: "^Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/control_dependency"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/control_dependency"
  input: "^Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Generator/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/Cast"
  op: "Cast"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/Size"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/Cast"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice/stack"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice/stack_1"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/ExpandDims"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/strided_slice"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Generator/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "InputSpectralFrame/shuffle_batch:1"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_10"
  op: "AddN"
  input: "Update/gradients/loss/Flatten/flatten/Reshape_grad/Reshape"
  input: "Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Flatten/flatten/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_10"
  input: "^Update/gradients/loss/Encoder/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_10"
  input: "^Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Flatten/flatten/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/control_dependency_1"
  input: "loss/GaussianSampleLayer/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul_1"
  op: "Mul"
  input: "Update/gradients/loss/GaussianSampleLayer/Add_grad/tuple/control_dependency_1"
  input: "loss/GaussianSampleLayer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul"
  input: "^Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul"
  input: "^Update/gradients/loss/GaussianSampleLayer/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul_1"
  input: "^Update/gradients/loss/GaussianSampleLayer/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/GaussianSampleLayer/Mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/control_dependency"
  input: "Encoder/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "loss/Encoder/Flatten/flatten/Reshape"
  input: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul_1"
  input: "^Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "loss/GaussianSampleLayer/Sqrt"
  input: "Update/gradients/loss/GaussianSampleLayer/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/GaussianSampleLayer/Exp_grad/mul"
  op: "Mul"
  input: "Update/gradients/loss/GaussianSampleLayer/Sqrt_grad/SqrtGrad"
  input: "loss/GaussianSampleLayer/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_11"
  op: "AddN"
  input: "Update/gradients/loss/Flatten_1/flatten/Reshape_grad/Reshape"
  input: "Update/gradients/loss/GaussianSampleLayer/Exp_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Flatten_1/flatten/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_11"
  input: "^Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_11"
  input: "^Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Flatten_1/flatten/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/control_dependency"
  input: "Encoder/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "loss/Encoder/Flatten/flatten/Reshape"
  input: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul"
  input: "^Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul_1"
  input: "^Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_12"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Flatten/flatten/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Flatten/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/AddN_12"
  input: "Update/gradients/loss/Encoder/Flatten/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Encoder/Conv2d-4/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Shape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Flatten/flatten/Reshape_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/zeros_like"
  input: "Update/gradients/loss/Encoder/Flatten/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/SelectV2_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-4/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/mul/x"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_13"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-4/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_13"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_13"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_13"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/control_dependency"
  input: "loss/Encoder/Conv2d-4/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-4/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/moments/mean"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_14"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_14"
  input: "Encoder/Conv2d-4/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-4/batchnorm/Rsqrt"
  input: "Update/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Encoder/Conv2d-4/batchnorm/Rsqrt"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Maximum/x"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/floordiv/x"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd"
  input: "loss/Encoder/Conv2d-4/moments/StopGradient"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 768.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_15"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-4/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_15"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_15"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "loss/Encoder/Conv2d-3/lrelu"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/ShapeN"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/read"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "loss/Encoder/Conv2d-3/lrelu"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/ShapeN:1"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropInput"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Encoder/Conv2d-3/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Shape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/zeros_like"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/SelectV2_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-3/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/mul/x"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_16"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-3/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_16"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_16"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_16"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/control_dependency"
  input: "loss/Encoder/Conv2d-3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/moments/mean"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_17"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_17"
  input: "Encoder/Conv2d-3/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-3/batchnorm/Rsqrt"
  input: "Update/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Encoder/Conv2d-3/batchnorm/Rsqrt"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Maximum/x"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/floordiv/x"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 896.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd"
  input: "loss/Encoder/Conv2d-3/moments/StopGradient"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\007\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 896.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_18"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-3/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_18"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_18"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "loss/Encoder/Conv2d-2/lrelu"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/ShapeN"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/read"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "loss/Encoder/Conv2d-2/lrelu"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/ShapeN:1"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropInput"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Encoder/Conv2d-2/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Shape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/zeros_like"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/SelectV2_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/BroadcastGradientArgs/s0_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/mul/x"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_19"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_19"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_19"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_19"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/control_dependency"
  input: "loss/Encoder/Conv2d-2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/moments/mean"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_20"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_20"
  input: "Encoder/Conv2d-2/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-2/batchnorm/Rsqrt"
  input: "Update/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Encoder/Conv2d-2/batchnorm/Rsqrt"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Maximum/x"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/floordiv/x"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1216.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd"
  input: "loss/Encoder/Conv2d-2/moments/StopGradient"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/BroadcastGradientArgs/s0"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000\023\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1216.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_21"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_21"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_21"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 19
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "loss/Encoder/Conv2d-1/lrelu"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/ShapeN"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/read"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "loss/Encoder/Conv2d-1/lrelu"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/ShapeN:1"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropInput"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Encoder/Conv2d-1/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Shape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/zeros_like"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/SelectV2_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/mul/x"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_22"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_22"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_22"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_22"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/control_dependency"
  input: "loss/Encoder/Conv2d-1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/moments/mean"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_23"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_23"
  input: "Encoder/Conv2d-1/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-1/batchnorm/Rsqrt"
  input: "Update/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Encoder/Conv2d-1/batchnorm/Rsqrt"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1824.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd"
  input: "loss/Encoder/Conv2d-1/moments/StopGradient"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\0009\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1824.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_24"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_24"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_24"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 57
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "loss/Encoder/Conv2d-0/lrelu"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/ShapeN"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/read"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "loss/Encoder/Conv2d-0/lrelu"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/ShapeN:1"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropInput"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like"
  op: "Fill"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like/shape_as_tensor"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/Encoder/Conv2d-0/batchnorm/add_1"
  input: "loss/Encoder/Conv2d-0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Shape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/SelectV2"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/SelectV2_1"
  op: "SelectV2"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/GreaterEqual"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/zeros_like"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/SelectV2_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-0/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/mul/x"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_25"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-0/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/AddN_25"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_25"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_25"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/lrelu_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/control_dependency"
  input: "loss/Encoder/Conv2d-0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "loss/Encoder/Conv2d-0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/moments/mean"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_26"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "Update/gradients/AddN_26"
  input: "Encoder/Conv2d-0/layernorm.scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "loss/Encoder/Conv2d-0/batchnorm/Rsqrt"
  input: "Update/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Sum_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "loss/Encoder/Conv2d-0/batchnorm/Rsqrt"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/Rsqrt_grad/RsqrtGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/add_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2736.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/scalar"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd"
  input: "loss/Encoder/Conv2d-0/moments/StopGradient"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Mul"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/mul_1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Sum"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/mul_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/mul_1"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Neg"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\253\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Tile"
  op: "Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Reshape"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2736.0
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Tile"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/AddN_27"
  op: "AddN"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Update/gradients/loss/Encoder/Conv2d-0/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Update/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/AddN_27"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/AddN_27"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 171
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/BiasAddGrad"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "InputSpectralFrame/shuffle_batch"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/ShapeN"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/read"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "InputSpectralFrame/shuffle_batch"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/ShapeN:1"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropInput"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 513
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropFilter"
  input: "^Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Update/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Update/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Update/beta1_power/Assign"
  op: "Assign"
  input: "Update/beta1_power"
  input: "Update/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Update/beta1_power/read"
  op: "Identity"
  input: "Update/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Update/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Update/beta2_power/Assign"
  op: "Assign"
  input: "Update/beta2_power"
  input: "Update/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Update/beta2_power/read"
  op: "Identity"
  input: "Update/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam/Initializer/zeros"
  op: "Fill"
  input: "y_embedding/y_emb/Adam/Initializer/zeros/shape_as_tensor"
  input: "y_embedding/y_emb/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam/Assign"
  op: "Assign"
  input: "y_embedding/y_emb/Adam"
  input: "y_embedding/y_emb/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam/read"
  op: "Identity"
  input: "y_embedding/y_emb/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "y_embedding/y_emb/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "y_embedding/y_emb/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam_1/Assign"
  op: "Assign"
  input: "y_embedding/y_emb/Adam_1"
  input: "y_embedding/y_emb/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "y_embedding/y_emb/Adam_1/read"
  op: "Identity"
  input: "y_embedding/y_emb/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.offset/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-0/layernorm.scale/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.offset/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-1/layernorm.scale/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.offset/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-2/layernorm.scale/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.offset/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-3/layernorm.scale/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.offset/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/Conv2d-4/layernorm.scale/Adam_1/read"
  op: "Identity"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Encoder/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Encoder/dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/dense/kernel/Adam"
  input: "Encoder/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Encoder/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Encoder/dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/dense/kernel/Adam_1"
  input: "Encoder/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/dense/bias/Adam"
  input: "Encoder/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam/read"
  op: "Identity"
  input: "Encoder/dense/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/dense/bias/Adam_1"
  input: "Encoder/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/dense/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Encoder/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Encoder/dense_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Encoder/dense_1/kernel/Adam"
  input: "Encoder/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "Encoder/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Encoder/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Encoder/dense_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/dense_1/kernel/Adam_1"
  input: "Encoder/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Encoder/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "Encoder/dense_1/bias/Adam"
  input: "Encoder/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam/read"
  op: "Identity"
  input: "Encoder/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Encoder/dense_1/bias/Adam_1"
  input: "Encoder/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "Encoder/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "Generator/fully_connected/weights/Adam"
  input: "Generator/fully_connected/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam/read"
  op: "Identity"
  input: "Generator/fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "Generator/fully_connected/weights/Adam_1"
  input: "Generator/fully_connected/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "Generator/fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam/Assign"
  op: "Assign"
  input: "Generator/fully_connected/biases/Adam"
  input: "Generator/fully_connected/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam/read"
  op: "Identity"
  input: "Generator/fully_connected/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam_1/Assign"
  op: "Assign"
  input: "Generator/fully_connected/biases/Adam_1"
  input: "Generator/fully_connected/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected/biases/Adam_1/read"
  op: "Identity"
  input: "Generator/fully_connected/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "Generator/fully_connected_1/weights/Adam"
  input: "Generator/fully_connected_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "Generator/fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\003\006\000\000"
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "Generator/fully_connected_1/weights/Adam_1"
  input: "Generator/fully_connected_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "Generator/fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected_1/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected_1/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam/Assign"
  op: "Assign"
  input: "Generator/fully_connected_1/biases/Adam"
  input: "Generator/fully_connected_1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam/read"
  op: "Identity"
  input: "Generator/fully_connected_1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/fully_connected_1/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/fully_connected_1/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "Generator/fully_connected_1/biases/Adam_1"
  input: "Generator/fully_connected_1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/fully_connected_1/biases/Adam_1/read"
  op: "Identity"
  input: "Generator/fully_connected_1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/BiasAdd/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/BiasAdd/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam/Assign"
  op: "Assign"
  input: "Generator/BiasAdd/biases/Adam"
  input: "Generator/BiasAdd/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam/read"
  op: "Identity"
  input: "Generator/BiasAdd/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1539
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/BiasAdd/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/BiasAdd/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1539
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam_1/Assign"
  op: "Assign"
  input: "Generator/BiasAdd/biases/Adam_1"
  input: "Generator/BiasAdd/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/BiasAdd/biases/Adam_1/read"
  op: "Identity"
  input: "Generator/BiasAdd/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\001\000\000\000 \000\000\000Q\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 81
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose/kernel/Adam"
  input: "Generator/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\001\000\000\000 \000\000\000Q\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 81
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose/kernel/Adam_1"
  input: "Generator/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose/kernel/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose/bias/Adam"
  input: "Generator/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose/bias/Adam_1"
  input: "Generator/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose/bias/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN0.offset/Adam"
  input: "Generator/ConvT-LN0.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam/read"
  op: "Identity"
  input: "Generator/ConvT-LN0.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam_1/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN0.offset/Adam_1"
  input: "Generator/ConvT-LN0.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.offset/Adam_1/read"
  op: "Identity"
  input: "Generator/ConvT-LN0.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN0.scale/Adam"
  input: "Generator/ConvT-LN0.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam/read"
  op: "Identity"
  input: "Generator/ConvT-LN0.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam_1/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN0.scale/Adam_1"
  input: "Generator/ConvT-LN0.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN0.scale/Adam_1/read"
  op: "Identity"
  input: "Generator/ConvT-LN0.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/conv2d_transpose_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/conv2d_transpose_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/kernel/Adam"
  input: "Generator/conv2d_transpose_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/kernel/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/bias/Adam"
  input: "Generator/conv2d_transpose_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/bias/Adam_1"
  input: "Generator/conv2d_transpose_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_1/bias/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN1.offset/Adam"
  input: "Generator/ConvT-LN1.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam/read"
  op: "Identity"
  input: "Generator/ConvT-LN1.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam_1/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN1.offset/Adam_1"
  input: "Generator/ConvT-LN1.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.offset/Adam_1/read"
  op: "Identity"
  input: "Generator/ConvT-LN1.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN1.scale/Adam"
  input: "Generator/ConvT-LN1.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam/read"
  op: "Identity"
  input: "Generator/ConvT-LN1.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam_1/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN1.scale/Adam_1"
  input: "Generator/ConvT-LN1.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN1.scale/Adam_1/read"
  op: "Identity"
  input: "Generator/ConvT-LN1.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/kernel/Adam"
  input: "Generator/conv2d_transpose_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/kernel/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/bias/Adam"
  input: "Generator/conv2d_transpose_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/bias/Adam_1"
  input: "Generator/conv2d_transpose_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_2/bias/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN2.offset/Adam"
  input: "Generator/ConvT-LN2.offset/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam/read"
  op: "Identity"
  input: "Generator/ConvT-LN2.offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam_1/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN2.offset/Adam_1"
  input: "Generator/ConvT-LN2.offset/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.offset/Adam_1/read"
  op: "Identity"
  input: "Generator/ConvT-LN2.offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN2.scale/Adam"
  input: "Generator/ConvT-LN2.scale/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam/read"
  op: "Identity"
  input: "Generator/ConvT-LN2.scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam_1/Assign"
  op: "Assign"
  input: "Generator/ConvT-LN2.scale/Adam_1"
  input: "Generator/ConvT-LN2.scale/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/ConvT-LN2.scale/Adam_1/read"
  op: "Identity"
  input: "Generator/ConvT-LN2.scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\004\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/conv2d_transpose_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/conv2d_transpose_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1025
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/kernel/Adam"
  input: "Generator/conv2d_transpose_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\004\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1025
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/kernel/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/bias/Adam"
  input: "Generator/conv2d_transpose_3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/bias/Adam_1"
  input: "Generator/conv2d_transpose_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Generator/conv2d_transpose_3/bias/Adam_1/read"
  op: "Identity"
  input: "Generator/conv2d_transpose_3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Update/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Update/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Update/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/Unique"
  op: "Unique"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/Shape"
  op: "Shape"
  input: "Update/Adam/update_y_embedding/y_emb/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/strided_slice"
  op: "StridedSlice"
  input: "Update/Adam/update_y_embedding/y_emb/Shape"
  input: "Update/Adam/update_y_embedding/y_emb/strided_slice/stack"
  input: "Update/Adam/update_y_embedding/y_emb/strided_slice/stack_1"
  input: "Update/Adam/update_y_embedding/y_emb/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "Update/gradients/loss/Generator/embedding_lookup_grad/Reshape"
  input: "Update/Adam/update_y_embedding/y_emb/Unique:1"
  input: "Update/Adam/update_y_embedding/y_emb/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub"
  op: "Sub"
  input: "Update/Adam/update_y_embedding/y_emb/sub/x"
  input: "Update/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/Sqrt"
  op: "Sqrt"
  input: "Update/Adam/update_y_embedding/y_emb/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul"
  op: "Mul"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/update_y_embedding/y_emb/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub_1"
  op: "Sub"
  input: "Update/Adam/update_y_embedding/y_emb/sub_1/x"
  input: "Update/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/truediv"
  op: "RealDiv"
  input: "Update/Adam/update_y_embedding/y_emb/mul"
  input: "Update/Adam/update_y_embedding/y_emb/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub_2"
  op: "Sub"
  input: "Update/Adam/update_y_embedding/y_emb/sub_2/x"
  input: "Update/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul_1"
  op: "Mul"
  input: "Update/Adam/update_y_embedding/y_emb/UnsortedSegmentSum"
  input: "Update/Adam/update_y_embedding/y_emb/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul_2"
  op: "Mul"
  input: "y_embedding/y_emb/Adam/read"
  input: "Update/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/Assign"
  op: "Assign"
  input: "y_embedding/y_emb/Adam"
  input: "Update/Adam/update_y_embedding/y_emb/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/ScatterAdd"
  op: "ScatterAdd"
  input: "y_embedding/y_emb/Adam"
  input: "Update/Adam/update_y_embedding/y_emb/Unique"
  input: "Update/Adam/update_y_embedding/y_emb/mul_1"
  input: "^Update/Adam/update_y_embedding/y_emb/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul_3"
  op: "Mul"
  input: "Update/Adam/update_y_embedding/y_emb/UnsortedSegmentSum"
  input: "Update/Adam/update_y_embedding/y_emb/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/sub_3"
  op: "Sub"
  input: "Update/Adam/update_y_embedding/y_emb/sub_3/x"
  input: "Update/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul_4"
  op: "Mul"
  input: "Update/Adam/update_y_embedding/y_emb/mul_3"
  input: "Update/Adam/update_y_embedding/y_emb/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul_5"
  op: "Mul"
  input: "y_embedding/y_emb/Adam_1/read"
  input: "Update/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/Assign_1"
  op: "Assign"
  input: "y_embedding/y_emb/Adam_1"
  input: "Update/Adam/update_y_embedding/y_emb/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/ScatterAdd_1"
  op: "ScatterAdd"
  input: "y_embedding/y_emb/Adam_1"
  input: "Update/Adam/update_y_embedding/y_emb/Unique"
  input: "Update/Adam/update_y_embedding/y_emb/mul_4"
  input: "^Update/Adam/update_y_embedding/y_emb/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/Sqrt_1"
  op: "Sqrt"
  input: "Update/Adam/update_y_embedding/y_emb/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/mul_6"
  op: "Mul"
  input: "Update/Adam/update_y_embedding/y_emb/truediv"
  input: "Update/Adam/update_y_embedding/y_emb/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/add"
  op: "AddV2"
  input: "Update/Adam/update_y_embedding/y_emb/Sqrt_1"
  input: "Update/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/truediv_1"
  op: "RealDiv"
  input: "Update/Adam/update_y_embedding/y_emb/mul_6"
  input: "Update/Adam/update_y_embedding/y_emb/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/AssignSub"
  op: "AssignSub"
  input: "y_embedding/y_emb"
  input: "Update/Adam/update_y_embedding/y_emb/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_y_embedding/y_emb/group_deps"
  op: "NoOp"
  input: "^Update/Adam/update_y_embedding/y_emb/AssignSub"
  input: "^Update/Adam/update_y_embedding/y_emb/ScatterAdd"
  input: "^Update/Adam/update_y_embedding/y_emb/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-0/Conv2d-0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-0/layernorm.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-0/layernorm.offset"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-0/layernorm.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-0/layernorm.scale"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-0/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-1/Conv2d-1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-1/layernorm.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-1/layernorm.offset"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-1/layernorm.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-1/layernorm.scale"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-1/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-2/Conv2d-2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-2/layernorm.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-2/layernorm.offset"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-2/layernorm.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-2/layernorm.scale"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-2/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-3/Conv2d-3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-3/layernorm.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-3/layernorm.offset"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-3/layernorm.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-3/layernorm.scale"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-3/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-4/Conv2d-4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-4/layernorm.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-4/layernorm.offset"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/Conv2d-4/layernorm.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/Conv2d-4/layernorm.scale"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/Conv2d-4/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/dense/kernel"
  input: "Encoder/dense/kernel/Adam"
  input: "Encoder/dense/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/dense/bias"
  input: "Encoder/dense/bias/Adam"
  input: "Encoder/dense/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/dense_1/kernel"
  input: "Encoder/dense_1/kernel/Adam"
  input: "Encoder/dense_1/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/dense_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Encoder/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Encoder/dense_1/bias"
  input: "Encoder/dense_1/bias/Adam"
  input: "Encoder/dense_1/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Encoder/dense_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/fully_connected/weights"
  input: "Generator/fully_connected/weights/Adam"
  input: "Generator/fully_connected/weights/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/fully_connected/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/fully_connected/biases"
  input: "Generator/fully_connected/biases/Adam"
  input: "Generator/fully_connected/biases/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/fully_connected_1/weights"
  input: "Generator/fully_connected_1/weights/Adam"
  input: "Generator/fully_connected_1/weights/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/fully_connected_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/fully_connected_1/biases"
  input: "Generator/fully_connected_1/biases/Adam"
  input: "Generator/fully_connected_1/biases/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/BiasAdd/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/BiasAdd/biases"
  input: "Generator/BiasAdd/biases/Adam"
  input: "Generator/BiasAdd/biases/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/BiasAdd/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose/kernel"
  input: "Generator/conv2d_transpose/kernel/Adam"
  input: "Generator/conv2d_transpose/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose/bias"
  input: "Generator/conv2d_transpose/bias/Adam"
  input: "Generator/conv2d_transpose/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/ConvT-LN0.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/ConvT-LN0.offset"
  input: "Generator/ConvT-LN0.offset/Adam"
  input: "Generator/ConvT-LN0.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/ConvT-LN0.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/ConvT-LN0.scale"
  input: "Generator/ConvT-LN0.scale/Adam"
  input: "Generator/ConvT-LN0.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose_1/kernel"
  input: "Generator/conv2d_transpose_1/kernel/Adam"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose_1/bias"
  input: "Generator/conv2d_transpose_1/bias/Adam"
  input: "Generator/conv2d_transpose_1/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/ConvT-LN1.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/ConvT-LN1.offset"
  input: "Generator/ConvT-LN1.offset/Adam"
  input: "Generator/ConvT-LN1.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/batchnorm_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/ConvT-LN1.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/ConvT-LN1.scale"
  input: "Generator/ConvT-LN1.scale/Adam"
  input: "Generator/ConvT-LN1.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/batchnorm_1/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose_2/kernel"
  input: "Generator/conv2d_transpose_2/kernel/Adam"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose_2/bias"
  input: "Generator/conv2d_transpose_2/bias/Adam"
  input: "Generator/conv2d_transpose_2/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/ConvT-LN2.offset/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/ConvT-LN2.offset"
  input: "Generator/ConvT-LN2.offset/Adam"
  input: "Generator/ConvT-LN2.offset/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/batchnorm_2/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/ConvT-LN2.scale/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/ConvT-LN2.scale"
  input: "Generator/ConvT-LN2.scale/Adam"
  input: "Generator/ConvT-LN2.scale/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/batchnorm_2/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose_3/kernel"
  input: "Generator/conv2d_transpose_3/kernel/Adam"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/update_Generator/conv2d_transpose_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Generator/conv2d_transpose_3/bias"
  input: "Generator/conv2d_transpose_3/bias/Adam"
  input: "Generator/conv2d_transpose_3/bias/Adam_1"
  input: "Update/beta1_power/read"
  input: "Update/beta2_power/read"
  input: "Update/Adam/learning_rate"
  input: "Update/Adam/beta1"
  input: "Update/Adam/beta2"
  input: "Update/Adam/epsilon"
  input: "Update/gradients/loss/Generator/conv2d_transpose_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Update/Adam/mul"
  op: "Mul"
  input: "Update/beta1_power/read"
  input: "Update/Adam/beta1"
  input: "^Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense_1/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense_1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/BiasAdd/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN0.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN0.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN1.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN1.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN2.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN2.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_1/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_2/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_2/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_3/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_3/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected/weights/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected_1/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected_1/weights/ApplyAdam"
  input: "^Update/Adam/update_y_embedding/y_emb/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/Assign"
  op: "Assign"
  input: "Update/beta1_power"
  input: "Update/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Update/Adam/mul_1"
  op: "Mul"
  input: "Update/beta2_power/read"
  input: "Update/Adam/beta2"
  input: "^Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense_1/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense_1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/BiasAdd/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN0.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN0.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN1.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN1.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN2.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN2.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_1/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_2/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_2/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_3/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_3/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected/weights/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected_1/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected_1/weights/ApplyAdam"
  input: "^Update/Adam/update_y_embedding/y_emb/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Update/Adam/Assign_1"
  op: "Assign"
  input: "Update/beta2_power"
  input: "Update/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Update/Adam/update"
  op: "NoOp"
  input: "^Update/Adam/Assign"
  input: "^Update/Adam/Assign_1"
  input: "^Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/Conv2d-0/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-0/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/Conv2d-1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-1/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/Conv2d-2/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-2/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/Conv2d-3/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-3/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/Conv2d-4/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/layernorm.offset/ApplyAdam"
  input: "^Update/Adam/update_Encoder/Conv2d-4/layernorm.scale/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense/kernel/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense_1/bias/ApplyAdam"
  input: "^Update/Adam/update_Encoder/dense_1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/BiasAdd/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN0.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN0.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN1.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN1.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN2.offset/ApplyAdam"
  input: "^Update/Adam/update_Generator/ConvT-LN2.scale/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_1/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_1/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_2/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_2/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_3/bias/ApplyAdam"
  input: "^Update/Adam/update_Generator/conv2d_transpose_3/kernel/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected/weights/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected_1/biases/ApplyAdam"
  input: "^Update/Adam/update_Generator/fully_connected_1/weights/ApplyAdam"
  input: "^Update/Adam/update_y_embedding/y_emb/group_deps"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "Update/Adam/value"
  op: "Const"
  input: "^Update/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Update/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Update/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "y_embedding/y_emb"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/layernorm.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/layernorm.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/layernorm.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/layernorm.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/layernorm.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/layernorm.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/layernorm.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/layernorm.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/layernorm.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/layernorm.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "Encoder/dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "Encoder/dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected_1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "Generator/BiasAdd/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN0.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN0.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN1.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN1.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN2.offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN2.scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "Update/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "Update/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "y_embedding/y_emb/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "y_embedding/y_emb/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "Encoder/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "Encoder/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "Encoder/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "Encoder/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "Encoder/dense_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected_1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected_1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected_1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "Generator/fully_connected_1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "Generator/BiasAdd/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "Generator/BiasAdd/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN0.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN0.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN0.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN0.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN1.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN1.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN1.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN1.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN2.offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN2.offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN2.scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "Generator/ConvT-LN2.scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "Generator/conv2d_transpose_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 135
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 135
          }
        }
        string_val: "y_embedding/y_emb"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias"
        string_val: "Encoder/Conv2d-0/layernorm.offset"
        string_val: "Encoder/Conv2d-0/layernorm.scale"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias"
        string_val: "Encoder/Conv2d-1/layernorm.offset"
        string_val: "Encoder/Conv2d-1/layernorm.scale"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias"
        string_val: "Encoder/Conv2d-2/layernorm.offset"
        string_val: "Encoder/Conv2d-2/layernorm.scale"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias"
        string_val: "Encoder/Conv2d-3/layernorm.offset"
        string_val: "Encoder/Conv2d-3/layernorm.scale"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias"
        string_val: "Encoder/Conv2d-4/layernorm.offset"
        string_val: "Encoder/Conv2d-4/layernorm.scale"
        string_val: "Encoder/dense/kernel"
        string_val: "Encoder/dense/bias"
        string_val: "Encoder/dense_1/kernel"
        string_val: "Encoder/dense_1/bias"
        string_val: "Generator/fully_connected/weights"
        string_val: "Generator/fully_connected/biases"
        string_val: "Generator/fully_connected_1/weights"
        string_val: "Generator/fully_connected_1/biases"
        string_val: "Generator/BiasAdd/biases"
        string_val: "Generator/conv2d_transpose/kernel"
        string_val: "Generator/conv2d_transpose/bias"
        string_val: "Generator/ConvT-LN0.offset"
        string_val: "Generator/ConvT-LN0.scale"
        string_val: "Generator/conv2d_transpose_1/kernel"
        string_val: "Generator/conv2d_transpose_1/bias"
        string_val: "Generator/ConvT-LN1.offset"
        string_val: "Generator/ConvT-LN1.scale"
        string_val: "Generator/conv2d_transpose_2/kernel"
        string_val: "Generator/conv2d_transpose_2/bias"
        string_val: "Generator/ConvT-LN2.offset"
        string_val: "Generator/ConvT-LN2.scale"
        string_val: "Generator/conv2d_transpose_3/kernel"
        string_val: "Generator/conv2d_transpose_3/bias"
        string_val: "global_step"
        string_val: "Update/beta1_power"
        string_val: "Update/beta2_power"
        string_val: "y_embedding/y_emb/Adam"
        string_val: "y_embedding/y_emb/Adam_1"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
        string_val: "Encoder/Conv2d-0/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-0/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
        string_val: "Encoder/Conv2d-1/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-1/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
        string_val: "Encoder/Conv2d-2/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-2/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
        string_val: "Encoder/Conv2d-3/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-3/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
        string_val: "Encoder/Conv2d-4/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-4/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
        string_val: "Encoder/dense/kernel/Adam"
        string_val: "Encoder/dense/kernel/Adam_1"
        string_val: "Encoder/dense/bias/Adam"
        string_val: "Encoder/dense/bias/Adam_1"
        string_val: "Encoder/dense_1/kernel/Adam"
        string_val: "Encoder/dense_1/kernel/Adam_1"
        string_val: "Encoder/dense_1/bias/Adam"
        string_val: "Encoder/dense_1/bias/Adam_1"
        string_val: "Generator/fully_connected/weights/Adam"
        string_val: "Generator/fully_connected/weights/Adam_1"
        string_val: "Generator/fully_connected/biases/Adam"
        string_val: "Generator/fully_connected/biases/Adam_1"
        string_val: "Generator/fully_connected_1/weights/Adam"
        string_val: "Generator/fully_connected_1/weights/Adam_1"
        string_val: "Generator/fully_connected_1/biases/Adam"
        string_val: "Generator/fully_connected_1/biases/Adam_1"
        string_val: "Generator/BiasAdd/biases/Adam"
        string_val: "Generator/BiasAdd/biases/Adam_1"
        string_val: "Generator/conv2d_transpose/kernel/Adam"
        string_val: "Generator/conv2d_transpose/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose/bias/Adam"
        string_val: "Generator/conv2d_transpose/bias/Adam_1"
        string_val: "Generator/ConvT-LN0.offset/Adam"
        string_val: "Generator/ConvT-LN0.offset/Adam_1"
        string_val: "Generator/ConvT-LN0.scale/Adam"
        string_val: "Generator/ConvT-LN0.scale/Adam_1"
        string_val: "Generator/conv2d_transpose_1/kernel/Adam"
        string_val: "Generator/conv2d_transpose_1/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_1/bias/Adam"
        string_val: "Generator/conv2d_transpose_1/bias/Adam_1"
        string_val: "Generator/ConvT-LN1.offset/Adam"
        string_val: "Generator/ConvT-LN1.offset/Adam_1"
        string_val: "Generator/ConvT-LN1.scale/Adam"
        string_val: "Generator/ConvT-LN1.scale/Adam_1"
        string_val: "Generator/conv2d_transpose_2/kernel/Adam"
        string_val: "Generator/conv2d_transpose_2/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_2/bias/Adam"
        string_val: "Generator/conv2d_transpose_2/bias/Adam_1"
        string_val: "Generator/ConvT-LN2.offset/Adam"
        string_val: "Generator/ConvT-LN2.offset/Adam_1"
        string_val: "Generator/ConvT-LN2.scale/Adam"
        string_val: "Generator/ConvT-LN2.scale/Adam_1"
        string_val: "Generator/conv2d_transpose_3/kernel/Adam"
        string_val: "Generator/conv2d_transpose_3/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_3/bias/Adam"
        string_val: "Generator/conv2d_transpose_3/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 135
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 135
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 135
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Encoder/Conv2d-0/Conv2d-0/bias/Adam/Assign"
  input: "^Encoder/Conv2d-0/Conv2d-0/bias/Adam_1/Assign"
  input: "^Encoder/Conv2d-0/Conv2d-0/bias/Assign"
  input: "^Encoder/Conv2d-0/Conv2d-0/kernel/Adam/Assign"
  input: "^Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1/Assign"
  input: "^Encoder/Conv2d-0/Conv2d-0/kernel/Assign"
  input: "^Encoder/Conv2d-0/layernorm.offset/Adam/Assign"
  input: "^Encoder/Conv2d-0/layernorm.offset/Adam_1/Assign"
  input: "^Encoder/Conv2d-0/layernorm.offset/Assign"
  input: "^Encoder/Conv2d-0/layernorm.scale/Adam/Assign"
  input: "^Encoder/Conv2d-0/layernorm.scale/Adam_1/Assign"
  input: "^Encoder/Conv2d-0/layernorm.scale/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/bias/Adam/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/bias/Adam_1/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/bias/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/kernel/Adam/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1/Assign"
  input: "^Encoder/Conv2d-1/Conv2d-1/kernel/Assign"
  input: "^Encoder/Conv2d-1/layernorm.offset/Adam/Assign"
  input: "^Encoder/Conv2d-1/layernorm.offset/Adam_1/Assign"
  input: "^Encoder/Conv2d-1/layernorm.offset/Assign"
  input: "^Encoder/Conv2d-1/layernorm.scale/Adam/Assign"
  input: "^Encoder/Conv2d-1/layernorm.scale/Adam_1/Assign"
  input: "^Encoder/Conv2d-1/layernorm.scale/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/bias/Adam/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/bias/Adam_1/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/bias/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/kernel/Adam/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1/Assign"
  input: "^Encoder/Conv2d-2/Conv2d-2/kernel/Assign"
  input: "^Encoder/Conv2d-2/layernorm.offset/Adam/Assign"
  input: "^Encoder/Conv2d-2/layernorm.offset/Adam_1/Assign"
  input: "^Encoder/Conv2d-2/layernorm.offset/Assign"
  input: "^Encoder/Conv2d-2/layernorm.scale/Adam/Assign"
  input: "^Encoder/Conv2d-2/layernorm.scale/Adam_1/Assign"
  input: "^Encoder/Conv2d-2/layernorm.scale/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/bias/Adam/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/bias/Adam_1/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/bias/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/kernel/Adam/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1/Assign"
  input: "^Encoder/Conv2d-3/Conv2d-3/kernel/Assign"
  input: "^Encoder/Conv2d-3/layernorm.offset/Adam/Assign"
  input: "^Encoder/Conv2d-3/layernorm.offset/Adam_1/Assign"
  input: "^Encoder/Conv2d-3/layernorm.offset/Assign"
  input: "^Encoder/Conv2d-3/layernorm.scale/Adam/Assign"
  input: "^Encoder/Conv2d-3/layernorm.scale/Adam_1/Assign"
  input: "^Encoder/Conv2d-3/layernorm.scale/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/bias/Adam/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/bias/Adam_1/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/bias/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/kernel/Adam/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1/Assign"
  input: "^Encoder/Conv2d-4/Conv2d-4/kernel/Assign"
  input: "^Encoder/Conv2d-4/layernorm.offset/Adam/Assign"
  input: "^Encoder/Conv2d-4/layernorm.offset/Adam_1/Assign"
  input: "^Encoder/Conv2d-4/layernorm.offset/Assign"
  input: "^Encoder/Conv2d-4/layernorm.scale/Adam/Assign"
  input: "^Encoder/Conv2d-4/layernorm.scale/Adam_1/Assign"
  input: "^Encoder/Conv2d-4/layernorm.scale/Assign"
  input: "^Encoder/dense/bias/Adam/Assign"
  input: "^Encoder/dense/bias/Adam_1/Assign"
  input: "^Encoder/dense/bias/Assign"
  input: "^Encoder/dense/kernel/Adam/Assign"
  input: "^Encoder/dense/kernel/Adam_1/Assign"
  input: "^Encoder/dense/kernel/Assign"
  input: "^Encoder/dense_1/bias/Adam/Assign"
  input: "^Encoder/dense_1/bias/Adam_1/Assign"
  input: "^Encoder/dense_1/bias/Assign"
  input: "^Encoder/dense_1/kernel/Adam/Assign"
  input: "^Encoder/dense_1/kernel/Adam_1/Assign"
  input: "^Encoder/dense_1/kernel/Assign"
  input: "^Generator/BiasAdd/biases/Adam/Assign"
  input: "^Generator/BiasAdd/biases/Adam_1/Assign"
  input: "^Generator/BiasAdd/biases/Assign"
  input: "^Generator/ConvT-LN0.offset/Adam/Assign"
  input: "^Generator/ConvT-LN0.offset/Adam_1/Assign"
  input: "^Generator/ConvT-LN0.offset/Assign"
  input: "^Generator/ConvT-LN0.scale/Adam/Assign"
  input: "^Generator/ConvT-LN0.scale/Adam_1/Assign"
  input: "^Generator/ConvT-LN0.scale/Assign"
  input: "^Generator/ConvT-LN1.offset/Adam/Assign"
  input: "^Generator/ConvT-LN1.offset/Adam_1/Assign"
  input: "^Generator/ConvT-LN1.offset/Assign"
  input: "^Generator/ConvT-LN1.scale/Adam/Assign"
  input: "^Generator/ConvT-LN1.scale/Adam_1/Assign"
  input: "^Generator/ConvT-LN1.scale/Assign"
  input: "^Generator/ConvT-LN2.offset/Adam/Assign"
  input: "^Generator/ConvT-LN2.offset/Adam_1/Assign"
  input: "^Generator/ConvT-LN2.offset/Assign"
  input: "^Generator/ConvT-LN2.scale/Adam/Assign"
  input: "^Generator/ConvT-LN2.scale/Adam_1/Assign"
  input: "^Generator/ConvT-LN2.scale/Assign"
  input: "^Generator/conv2d_transpose/bias/Adam/Assign"
  input: "^Generator/conv2d_transpose/bias/Adam_1/Assign"
  input: "^Generator/conv2d_transpose/bias/Assign"
  input: "^Generator/conv2d_transpose/kernel/Adam/Assign"
  input: "^Generator/conv2d_transpose/kernel/Adam_1/Assign"
  input: "^Generator/conv2d_transpose/kernel/Assign"
  input: "^Generator/conv2d_transpose_1/bias/Adam/Assign"
  input: "^Generator/conv2d_transpose_1/bias/Adam_1/Assign"
  input: "^Generator/conv2d_transpose_1/bias/Assign"
  input: "^Generator/conv2d_transpose_1/kernel/Adam/Assign"
  input: "^Generator/conv2d_transpose_1/kernel/Adam_1/Assign"
  input: "^Generator/conv2d_transpose_1/kernel/Assign"
  input: "^Generator/conv2d_transpose_2/bias/Adam/Assign"
  input: "^Generator/conv2d_transpose_2/bias/Adam_1/Assign"
  input: "^Generator/conv2d_transpose_2/bias/Assign"
  input: "^Generator/conv2d_transpose_2/kernel/Adam/Assign"
  input: "^Generator/conv2d_transpose_2/kernel/Adam_1/Assign"
  input: "^Generator/conv2d_transpose_2/kernel/Assign"
  input: "^Generator/conv2d_transpose_3/bias/Adam/Assign"
  input: "^Generator/conv2d_transpose_3/bias/Adam_1/Assign"
  input: "^Generator/conv2d_transpose_3/bias/Assign"
  input: "^Generator/conv2d_transpose_3/kernel/Adam/Assign"
  input: "^Generator/conv2d_transpose_3/kernel/Adam_1/Assign"
  input: "^Generator/conv2d_transpose_3/kernel/Assign"
  input: "^Generator/fully_connected/biases/Adam/Assign"
  input: "^Generator/fully_connected/biases/Adam_1/Assign"
  input: "^Generator/fully_connected/biases/Assign"
  input: "^Generator/fully_connected/weights/Adam/Assign"
  input: "^Generator/fully_connected/weights/Adam_1/Assign"
  input: "^Generator/fully_connected/weights/Assign"
  input: "^Generator/fully_connected_1/biases/Adam/Assign"
  input: "^Generator/fully_connected_1/biases/Adam_1/Assign"
  input: "^Generator/fully_connected_1/biases/Assign"
  input: "^Generator/fully_connected_1/weights/Adam/Assign"
  input: "^Generator/fully_connected_1/weights/Adam_1/Assign"
  input: "^Generator/fully_connected_1/weights/Assign"
  input: "^Update/beta1_power/Assign"
  input: "^Update/beta2_power/Assign"
  input: "^global_step/Assign"
  input: "^y_embedding/y_emb/Adam/Assign"
  input: "^y_embedding/y_emb/Adam_1/Assign"
  input: "^y_embedding/y_emb/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "init_all_tables"
  op: "NoOp"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 135
          }
        }
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
        string_val: "Encoder/Conv2d-0/layernorm.offset"
        string_val: "Encoder/Conv2d-0/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-0/layernorm.scale"
        string_val: "Encoder/Conv2d-0/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
        string_val: "Encoder/Conv2d-1/layernorm.offset"
        string_val: "Encoder/Conv2d-1/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-1/layernorm.scale"
        string_val: "Encoder/Conv2d-1/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
        string_val: "Encoder/Conv2d-2/layernorm.offset"
        string_val: "Encoder/Conv2d-2/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-2/layernorm.scale"
        string_val: "Encoder/Conv2d-2/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
        string_val: "Encoder/Conv2d-3/layernorm.offset"
        string_val: "Encoder/Conv2d-3/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-3/layernorm.scale"
        string_val: "Encoder/Conv2d-3/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
        string_val: "Encoder/Conv2d-4/layernorm.offset"
        string_val: "Encoder/Conv2d-4/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-4/layernorm.scale"
        string_val: "Encoder/Conv2d-4/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
        string_val: "Encoder/dense/bias"
        string_val: "Encoder/dense/bias/Adam"
        string_val: "Encoder/dense/bias/Adam_1"
        string_val: "Encoder/dense/kernel"
        string_val: "Encoder/dense/kernel/Adam"
        string_val: "Encoder/dense/kernel/Adam_1"
        string_val: "Encoder/dense_1/bias"
        string_val: "Encoder/dense_1/bias/Adam"
        string_val: "Encoder/dense_1/bias/Adam_1"
        string_val: "Encoder/dense_1/kernel"
        string_val: "Encoder/dense_1/kernel/Adam"
        string_val: "Encoder/dense_1/kernel/Adam_1"
        string_val: "Generator/BiasAdd/biases"
        string_val: "Generator/BiasAdd/biases/Adam"
        string_val: "Generator/BiasAdd/biases/Adam_1"
        string_val: "Generator/ConvT-LN0.offset"
        string_val: "Generator/ConvT-LN0.offset/Adam"
        string_val: "Generator/ConvT-LN0.offset/Adam_1"
        string_val: "Generator/ConvT-LN0.scale"
        string_val: "Generator/ConvT-LN0.scale/Adam"
        string_val: "Generator/ConvT-LN0.scale/Adam_1"
        string_val: "Generator/ConvT-LN1.offset"
        string_val: "Generator/ConvT-LN1.offset/Adam"
        string_val: "Generator/ConvT-LN1.offset/Adam_1"
        string_val: "Generator/ConvT-LN1.scale"
        string_val: "Generator/ConvT-LN1.scale/Adam"
        string_val: "Generator/ConvT-LN1.scale/Adam_1"
        string_val: "Generator/ConvT-LN2.offset"
        string_val: "Generator/ConvT-LN2.offset/Adam"
        string_val: "Generator/ConvT-LN2.offset/Adam_1"
        string_val: "Generator/ConvT-LN2.scale"
        string_val: "Generator/ConvT-LN2.scale/Adam"
        string_val: "Generator/ConvT-LN2.scale/Adam_1"
        string_val: "Generator/conv2d_transpose/bias"
        string_val: "Generator/conv2d_transpose/bias/Adam"
        string_val: "Generator/conv2d_transpose/bias/Adam_1"
        string_val: "Generator/conv2d_transpose/kernel"
        string_val: "Generator/conv2d_transpose/kernel/Adam"
        string_val: "Generator/conv2d_transpose/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_1/bias"
        string_val: "Generator/conv2d_transpose_1/bias/Adam"
        string_val: "Generator/conv2d_transpose_1/bias/Adam_1"
        string_val: "Generator/conv2d_transpose_1/kernel"
        string_val: "Generator/conv2d_transpose_1/kernel/Adam"
        string_val: "Generator/conv2d_transpose_1/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_2/bias"
        string_val: "Generator/conv2d_transpose_2/bias/Adam"
        string_val: "Generator/conv2d_transpose_2/bias/Adam_1"
        string_val: "Generator/conv2d_transpose_2/kernel"
        string_val: "Generator/conv2d_transpose_2/kernel/Adam"
        string_val: "Generator/conv2d_transpose_2/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_3/bias"
        string_val: "Generator/conv2d_transpose_3/bias/Adam"
        string_val: "Generator/conv2d_transpose_3/bias/Adam_1"
        string_val: "Generator/conv2d_transpose_3/kernel"
        string_val: "Generator/conv2d_transpose_3/kernel/Adam"
        string_val: "Generator/conv2d_transpose_3/kernel/Adam_1"
        string_val: "Generator/fully_connected/biases"
        string_val: "Generator/fully_connected/biases/Adam"
        string_val: "Generator/fully_connected/biases/Adam_1"
        string_val: "Generator/fully_connected/weights"
        string_val: "Generator/fully_connected/weights/Adam"
        string_val: "Generator/fully_connected/weights/Adam_1"
        string_val: "Generator/fully_connected_1/biases"
        string_val: "Generator/fully_connected_1/biases/Adam"
        string_val: "Generator/fully_connected_1/biases/Adam_1"
        string_val: "Generator/fully_connected_1/weights"
        string_val: "Generator/fully_connected_1/weights/Adam"
        string_val: "Generator/fully_connected_1/weights/Adam_1"
        string_val: "Update/beta1_power"
        string_val: "Update/beta2_power"
        string_val: "global_step"
        string_val: "y_embedding/y_emb"
        string_val: "y_embedding/y_emb/Adam"
        string_val: "y_embedding/y_emb/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 135
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  input: "Encoder/Conv2d-0/layernorm.offset"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-0/layernorm.scale"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  input: "Encoder/Conv2d-1/layernorm.offset"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-1/layernorm.scale"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  input: "Encoder/Conv2d-2/layernorm.offset"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-2/layernorm.scale"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  input: "Encoder/Conv2d-3/layernorm.offset"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-3/layernorm.scale"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  input: "Encoder/Conv2d-4/layernorm.offset"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  input: "Encoder/Conv2d-4/layernorm.scale"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  input: "Encoder/dense/bias"
  input: "Encoder/dense/bias/Adam"
  input: "Encoder/dense/bias/Adam_1"
  input: "Encoder/dense/kernel"
  input: "Encoder/dense/kernel/Adam"
  input: "Encoder/dense/kernel/Adam_1"
  input: "Encoder/dense_1/bias"
  input: "Encoder/dense_1/bias/Adam"
  input: "Encoder/dense_1/bias/Adam_1"
  input: "Encoder/dense_1/kernel"
  input: "Encoder/dense_1/kernel/Adam"
  input: "Encoder/dense_1/kernel/Adam_1"
  input: "Generator/BiasAdd/biases"
  input: "Generator/BiasAdd/biases/Adam"
  input: "Generator/BiasAdd/biases/Adam_1"
  input: "Generator/ConvT-LN0.offset"
  input: "Generator/ConvT-LN0.offset/Adam"
  input: "Generator/ConvT-LN0.offset/Adam_1"
  input: "Generator/ConvT-LN0.scale"
  input: "Generator/ConvT-LN0.scale/Adam"
  input: "Generator/ConvT-LN0.scale/Adam_1"
  input: "Generator/ConvT-LN1.offset"
  input: "Generator/ConvT-LN1.offset/Adam"
  input: "Generator/ConvT-LN1.offset/Adam_1"
  input: "Generator/ConvT-LN1.scale"
  input: "Generator/ConvT-LN1.scale/Adam"
  input: "Generator/ConvT-LN1.scale/Adam_1"
  input: "Generator/ConvT-LN2.offset"
  input: "Generator/ConvT-LN2.offset/Adam"
  input: "Generator/ConvT-LN2.offset/Adam_1"
  input: "Generator/ConvT-LN2.scale"
  input: "Generator/ConvT-LN2.scale/Adam"
  input: "Generator/ConvT-LN2.scale/Adam_1"
  input: "Generator/conv2d_transpose/bias"
  input: "Generator/conv2d_transpose/bias/Adam"
  input: "Generator/conv2d_transpose/bias/Adam_1"
  input: "Generator/conv2d_transpose/kernel"
  input: "Generator/conv2d_transpose/kernel/Adam"
  input: "Generator/conv2d_transpose/kernel/Adam_1"
  input: "Generator/conv2d_transpose_1/bias"
  input: "Generator/conv2d_transpose_1/bias/Adam"
  input: "Generator/conv2d_transpose_1/bias/Adam_1"
  input: "Generator/conv2d_transpose_1/kernel"
  input: "Generator/conv2d_transpose_1/kernel/Adam"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1"
  input: "Generator/conv2d_transpose_2/bias"
  input: "Generator/conv2d_transpose_2/bias/Adam"
  input: "Generator/conv2d_transpose_2/bias/Adam_1"
  input: "Generator/conv2d_transpose_2/kernel"
  input: "Generator/conv2d_transpose_2/kernel/Adam"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1"
  input: "Generator/conv2d_transpose_3/bias"
  input: "Generator/conv2d_transpose_3/bias/Adam"
  input: "Generator/conv2d_transpose_3/bias/Adam_1"
  input: "Generator/conv2d_transpose_3/kernel"
  input: "Generator/conv2d_transpose_3/kernel/Adam"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1"
  input: "Generator/fully_connected/biases"
  input: "Generator/fully_connected/biases/Adam"
  input: "Generator/fully_connected/biases/Adam_1"
  input: "Generator/fully_connected/weights"
  input: "Generator/fully_connected/weights/Adam"
  input: "Generator/fully_connected/weights/Adam_1"
  input: "Generator/fully_connected_1/biases"
  input: "Generator/fully_connected_1/biases/Adam"
  input: "Generator/fully_connected_1/biases/Adam_1"
  input: "Generator/fully_connected_1/weights"
  input: "Generator/fully_connected_1/weights/Adam"
  input: "Generator/fully_connected_1/weights/Adam_1"
  input: "Update/beta1_power"
  input: "Update/beta2_power"
  input: "global_step"
  input: "y_embedding/y_emb"
  input: "y_embedding/y_emb/Adam"
  input: "y_embedding/y_emb/Adam_1"
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 135
          }
        }
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
        string_val: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
        string_val: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
        string_val: "Encoder/Conv2d-0/layernorm.offset"
        string_val: "Encoder/Conv2d-0/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-0/layernorm.scale"
        string_val: "Encoder/Conv2d-0/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
        string_val: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
        string_val: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
        string_val: "Encoder/Conv2d-1/layernorm.offset"
        string_val: "Encoder/Conv2d-1/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-1/layernorm.scale"
        string_val: "Encoder/Conv2d-1/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
        string_val: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
        string_val: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
        string_val: "Encoder/Conv2d-2/layernorm.offset"
        string_val: "Encoder/Conv2d-2/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-2/layernorm.scale"
        string_val: "Encoder/Conv2d-2/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
        string_val: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
        string_val: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
        string_val: "Encoder/Conv2d-3/layernorm.offset"
        string_val: "Encoder/Conv2d-3/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-3/layernorm.scale"
        string_val: "Encoder/Conv2d-3/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
        string_val: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
        string_val: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
        string_val: "Encoder/Conv2d-4/layernorm.offset"
        string_val: "Encoder/Conv2d-4/layernorm.offset/Adam"
        string_val: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
        string_val: "Encoder/Conv2d-4/layernorm.scale"
        string_val: "Encoder/Conv2d-4/layernorm.scale/Adam"
        string_val: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
        string_val: "Encoder/dense/bias"
        string_val: "Encoder/dense/bias/Adam"
        string_val: "Encoder/dense/bias/Adam_1"
        string_val: "Encoder/dense/kernel"
        string_val: "Encoder/dense/kernel/Adam"
        string_val: "Encoder/dense/kernel/Adam_1"
        string_val: "Encoder/dense_1/bias"
        string_val: "Encoder/dense_1/bias/Adam"
        string_val: "Encoder/dense_1/bias/Adam_1"
        string_val: "Encoder/dense_1/kernel"
        string_val: "Encoder/dense_1/kernel/Adam"
        string_val: "Encoder/dense_1/kernel/Adam_1"
        string_val: "Generator/BiasAdd/biases"
        string_val: "Generator/BiasAdd/biases/Adam"
        string_val: "Generator/BiasAdd/biases/Adam_1"
        string_val: "Generator/ConvT-LN0.offset"
        string_val: "Generator/ConvT-LN0.offset/Adam"
        string_val: "Generator/ConvT-LN0.offset/Adam_1"
        string_val: "Generator/ConvT-LN0.scale"
        string_val: "Generator/ConvT-LN0.scale/Adam"
        string_val: "Generator/ConvT-LN0.scale/Adam_1"
        string_val: "Generator/ConvT-LN1.offset"
        string_val: "Generator/ConvT-LN1.offset/Adam"
        string_val: "Generator/ConvT-LN1.offset/Adam_1"
        string_val: "Generator/ConvT-LN1.scale"
        string_val: "Generator/ConvT-LN1.scale/Adam"
        string_val: "Generator/ConvT-LN1.scale/Adam_1"
        string_val: "Generator/ConvT-LN2.offset"
        string_val: "Generator/ConvT-LN2.offset/Adam"
        string_val: "Generator/ConvT-LN2.offset/Adam_1"
        string_val: "Generator/ConvT-LN2.scale"
        string_val: "Generator/ConvT-LN2.scale/Adam"
        string_val: "Generator/ConvT-LN2.scale/Adam_1"
        string_val: "Generator/conv2d_transpose/bias"
        string_val: "Generator/conv2d_transpose/bias/Adam"
        string_val: "Generator/conv2d_transpose/bias/Adam_1"
        string_val: "Generator/conv2d_transpose/kernel"
        string_val: "Generator/conv2d_transpose/kernel/Adam"
        string_val: "Generator/conv2d_transpose/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_1/bias"
        string_val: "Generator/conv2d_transpose_1/bias/Adam"
        string_val: "Generator/conv2d_transpose_1/bias/Adam_1"
        string_val: "Generator/conv2d_transpose_1/kernel"
        string_val: "Generator/conv2d_transpose_1/kernel/Adam"
        string_val: "Generator/conv2d_transpose_1/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_2/bias"
        string_val: "Generator/conv2d_transpose_2/bias/Adam"
        string_val: "Generator/conv2d_transpose_2/bias/Adam_1"
        string_val: "Generator/conv2d_transpose_2/kernel"
        string_val: "Generator/conv2d_transpose_2/kernel/Adam"
        string_val: "Generator/conv2d_transpose_2/kernel/Adam_1"
        string_val: "Generator/conv2d_transpose_3/bias"
        string_val: "Generator/conv2d_transpose_3/bias/Adam"
        string_val: "Generator/conv2d_transpose_3/bias/Adam_1"
        string_val: "Generator/conv2d_transpose_3/kernel"
        string_val: "Generator/conv2d_transpose_3/kernel/Adam"
        string_val: "Generator/conv2d_transpose_3/kernel/Adam_1"
        string_val: "Generator/fully_connected/biases"
        string_val: "Generator/fully_connected/biases/Adam"
        string_val: "Generator/fully_connected/biases/Adam_1"
        string_val: "Generator/fully_connected/weights"
        string_val: "Generator/fully_connected/weights/Adam"
        string_val: "Generator/fully_connected/weights/Adam_1"
        string_val: "Generator/fully_connected_1/biases"
        string_val: "Generator/fully_connected_1/biases/Adam"
        string_val: "Generator/fully_connected_1/biases/Adam_1"
        string_val: "Generator/fully_connected_1/weights"
        string_val: "Generator/fully_connected_1/weights/Adam"
        string_val: "Generator/fully_connected_1/weights/Adam_1"
        string_val: "Update/beta1_power"
        string_val: "Update/beta2_power"
        string_val: "global_step"
        string_val: "y_embedding/y_emb"
        string_val: "y_embedding/y_emb/Adam"
        string_val: "y_embedding/y_emb/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 135
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 135
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/bias"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/bias/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Encoder/Conv2d-0/Conv2d-0/kernel/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.offset"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.offset/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.scale"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Encoder/Conv2d-0/layernorm.scale/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/bias"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/bias/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Encoder/Conv2d-1/Conv2d-1/kernel/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/Conv2d-1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.offset"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.offset/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.scale"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Encoder/Conv2d-1/layernorm.scale/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-1/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/bias"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/bias/Adam_1"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "Encoder/Conv2d-2/Conv2d-2/kernel/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/Conv2d-2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.offset"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.offset/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.scale"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "Encoder/Conv2d-2/layernorm.scale/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-2/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/bias"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/bias/Adam_1"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "Encoder/Conv2d-3/Conv2d-3/kernel/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/Conv2d-3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.offset"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.offset/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.scale"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "Encoder/Conv2d-3/layernorm.scale/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-3/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/bias"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/bias/Adam_1"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "Encoder/Conv2d-4/Conv2d-4/kernel/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/Conv2d-4/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.offset"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.offset/Adam_1"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.scale"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "Encoder/Conv2d-4/layernorm.scale/Adam_1"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-4/layernorm.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "Encoder/dense/bias"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "Encoder/dense/bias/Adam"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "Encoder/dense/bias/Adam_1"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "Encoder/dense/kernel"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "Encoder/dense/kernel/Adam"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "Encoder/dense/kernel/Adam_1"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "Encoder/dense_1/bias"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "Encoder/dense_1/bias/Adam"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "Encoder/dense_1/bias/Adam_1"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "Encoder/dense_1/kernel"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "Encoder/dense_1/kernel/Adam"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "Encoder/dense_1/kernel/Adam_1"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "Generator/BiasAdd/biases"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "Generator/BiasAdd/biases/Adam"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "Generator/BiasAdd/biases/Adam_1"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/BiasAdd/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "Generator/ConvT-LN0.offset"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "Generator/ConvT-LN0.offset/Adam"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "Generator/ConvT-LN0.offset/Adam_1"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "Generator/ConvT-LN0.scale"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "Generator/ConvT-LN0.scale/Adam"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "Generator/ConvT-LN0.scale/Adam_1"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN0.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "Generator/ConvT-LN1.offset"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "Generator/ConvT-LN1.offset/Adam"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "Generator/ConvT-LN1.offset/Adam_1"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "Generator/ConvT-LN1.scale"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "Generator/ConvT-LN1.scale/Adam"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "Generator/ConvT-LN1.scale/Adam_1"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN1.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "Generator/ConvT-LN2.offset"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "Generator/ConvT-LN2.offset/Adam"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "Generator/ConvT-LN2.offset/Adam_1"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.offset"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "Generator/ConvT-LN2.scale"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "Generator/ConvT-LN2.scale/Adam"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "Generator/ConvT-LN2.scale/Adam_1"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/ConvT-LN2.scale"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "Generator/conv2d_transpose/bias"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "Generator/conv2d_transpose/bias/Adam"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "Generator/conv2d_transpose/bias/Adam_1"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "Generator/conv2d_transpose/kernel"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "Generator/conv2d_transpose/kernel/Adam"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "Generator/conv2d_transpose/kernel/Adam_1"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 81
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/bias"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/bias/Adam"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/bias/Adam_1"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/kernel"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/kernel/Adam"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "Generator/conv2d_transpose_1/kernel/Adam_1"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_1/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/bias"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/bias/Adam"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/bias/Adam_1"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/kernel"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/kernel/Adam"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "Generator/conv2d_transpose_2/kernel/Adam_1"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_2/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/bias"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/bias/Adam"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/bias/Adam_1"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/kernel"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/kernel/Adam"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "Generator/conv2d_transpose_3/kernel/Adam_1"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/conv2d_transpose_3/kernel"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1025
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "Generator/fully_connected/biases"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "Generator/fully_connected/biases/Adam"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "Generator/fully_connected/biases/Adam_1"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "Generator/fully_connected/weights"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "Generator/fully_connected/weights/Adam"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "Generator/fully_connected/weights/Adam_1"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "Generator/fully_connected_1/biases"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "Generator/fully_connected_1/biases/Adam"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "Generator/fully_connected_1/biases/Adam_1"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/biases"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "Generator/fully_connected_1/weights"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "Generator/fully_connected_1/weights/Adam"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "Generator/fully_connected_1/weights/Adam_1"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1539
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "Update/beta1_power"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "Update/beta2_power"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/Conv2d-0/Conv2d-0/bias"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "y_embedding/y_emb"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "y_embedding/y_emb/Adam"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "y_embedding/y_emb/Adam_1"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_embedding/y_emb"
      }
    }
  }
  attr {
    key: "_has_manual_control_dependencies"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "InputSpectralFrame/input_producer/fraction_of_32_full"
  input: "InputSpectralFrame/shuffle_batch/fraction_over_1024_of_1024_full"
  input: "KL-div"
  input: "logPx"
  input: "xh"
  input: "x"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 1286
}
